<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Me•博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-06-30T08:05:13.645Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Mec</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Web快速搭建一个网站</title>
    <link href="http://example.com/2024/06/30/%E4%BD%BF%E7%94%A8Web%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99/"/>
    <id>http://example.com/2024/06/30/%E4%BD%BF%E7%94%A8Web%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99/</id>
    <published>2024-06-30T07:58:46.000Z</published>
    <updated>2024-06-30T08:05:13.645Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Web-简介"><a href="#Web-简介" class="headerlink" title="Web 简介"></a>Web 简介</h4><p>web（World Wide Web）即全球<a href="https://baike.baidu.com/item/%E5%B9%BF%E5%9F%9F%E7%BD%91/422004?fromModule=lemma_inlink">广域网</a>，也称为<a href="https://baike.baidu.com/item/%E4%B8%87%E7%BB%B4%E7%BD%91/215515?fromModule=lemma_inlink">万维网</a>，它是一种基于<a href="https://baike.baidu.com/item/%E8%B6%85%E6%96%87%E6%9C%AC/2832422?fromModule=lemma_inlink">超文本</a>和<a href="https://baike.baidu.com/item/HTTP/243074?fromModule=lemma_inlink">HTTP</a>的、全球性的、动态交互的、<a href="https://baike.baidu.com/item/%E8%B7%A8%E5%B9%B3%E5%8F%B0/8558902?fromModule=lemma_inlink">跨平台</a>的分布式图形信息系统。是建立在Internet上的一种<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/9498645?fromModule=lemma_inlink">网络服务</a>，为浏览者在Internet上查找和浏览信息提供了图形化的、易于访问的直观界面，其中的文档及<a href="https://baike.baidu.com/item/%E8%B6%85%E7%BA%A7%E9%93%BE%E6%8E%A5/313121?fromModule=lemma_inlink">超级链接</a>将Internet上的信息节点组织成一个互为关联的<a href="https://baike.baidu.com/item/%E7%BD%91%E7%8A%B6%E7%BB%93%E6%9E%84/5106492?fromModule=lemma_inlink">网状结构</a>。 -来源于百度</p><h4 id="开始准备-–-安装Httpd"><a href="#开始准备-–-安装Httpd" class="headerlink" title="开始准备 – 安装Httpd"></a>开始准备 – 安装Httpd</h4><p>先安装httpd：<code>yum -y install httpd</code></p><p>然后加入自启动：<code>systemctl enable httpd</code></p><p>出现<code>Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /etc/systemd/system/httpd.service.</code></p><h5 id="搭建一个简单的网站"><a href="#搭建一个简单的网站" class="headerlink" title="搭建一个简单的网站"></a>搭建一个简单的网站</h5><h6 id="①-进入配置目录"><a href="#①-进入配置目录" class="headerlink" title="① 进入配置目录"></a>① 进入配置目录</h6><p>进入路径：<code>cd /etc/httpd/conf.d</code> ，在这个路径中建任意名称以<code>.conf</code>结尾的文件，编辑内容如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root]# cat myweb-1.conf </span><br><span class="line">#监听80端口,*是代表所有地址均可访问</span><br><span class="line">&lt;VirtualHost *:80&gt; </span><br><span class="line">#定义一个域名</span><br><span class="line">Servername mec8.fun </span><br><span class="line">#主配置存放文件路径</span><br><span class="line">DocumentRoot /var/www/html </span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h6 id="②-添加一个主页"><a href="#②-添加一个主页" class="headerlink" title="② 添加一个主页"></a>② 添加一个主页</h6><p>Ⅰ.进入到 <code>cd /var/www/html</code> 文件夹新建一个 <code>index.html</code> 主页文件</p><p>Ⅱ.写一段简单的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root]# echo hello Mec 2024.03.27 &gt; index.html</span><br></pre></td></tr></table></figure><p>Ⅲ. 重启<em><strong>httpd</strong></em>服务</p><p><code>*systemctl restart httpd*</code></p><h6 id="③-Linux解析域名"><a href="#③-Linux解析域名" class="headerlink" title="③ Linux解析域名"></a>③ Linux解析域名</h6><p><code>vi /etc/hosts</code></p><p>输入：IP地址 域名</p><p>例如 192.168.0.1 mec8.fun</p><p>测试linux解析是否正常：<code>curl 域名</code>（如果都能获取到内容便是正常的） ，如果失败，关闭selinux：<code>setenforce 0</code></p><h6 id="④-检查是否打开80端口"><a href="#④-检查是否打开80端口" class="headerlink" title="④ 检查是否打开80端口"></a>④ 检查是否打开80端口</h6><p>Ⅰ. 查看已经开放的端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-ports </span><br></pre></td></tr></table></figure><p>Ⅱ. 开启端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent  </span><br><span class="line"> </span><br><span class="line"> 命令含义:</span><br><span class="line"> –zone #作用域</span><br><span class="line"> –add-port=80/tcp #添加端口，格式为：端口/通讯协议</span><br><span class="line"> –permanent #永久生效，没有此参数重启后失效</span><br></pre></td></tr></table></figure><p>Ⅲ. 重启端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h6 id="⑤-访问网页"><a href="#⑤-访问网页" class="headerlink" title="⑤ 访问网页"></a>⑤ 访问网页</h6><p>打开浏览器输入域名即可！</p><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><h6 id="一、安装httpd失败"><a href="#一、安装httpd失败" class="headerlink" title="一、安装httpd失败"></a>一、安装httpd失败</h6><p><strong>当我尝试 <code>yum install httpd</code>我得到了错误</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Loaded plugins: changelog, fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.cloud.aliyuncs.com</span><br><span class="line"> * extras: mirrors.cloud.aliyuncs.com</span><br><span class="line"> * updates: mirrors.cloud.aliyuncs.com</span><br><span class="line">No package httpd available.</span><br><span class="line">Error: Nothing to do</span><br></pre></td></tr></table></figure><p><strong>怎么解决呢？两种方法</strong></p><p>①第一种方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --disableexcludes=all install -y httpd</span><br></pre></td></tr></table></figure><p>②第二种方法：</p><p><code>httpd</code> 组件可以从默认的 CentOS 存储库“base”和“updates”(对于较新的版本)安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># repoquery -i httpd | grep -i repo</span><br><span class="line">Repository  : updates</span><br></pre></td></tr></table></figure><p>确保你有存储库文件 <code>/etc/yum.repos.d/CentOS-Base.repo</code> 或手动创建它，至少包含以下内容:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line">mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os&amp;infra=$infra</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates</span><br><span class="line">mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates&amp;infra=$infra</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>然后做:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum clean all &amp;&amp; yum update -y &amp;&amp; yum install httpd -y</span><br></pre></td></tr></table></figure><h6 id="二、httpd启动-重启-失败"><a href="#二、httpd启动-重启-失败" class="headerlink" title="二、httpd启动(重启)失败"></a>二、httpd启动(重启)失败</h6><p><strong>运行<code>systemctl start httpd</code>或者<code>systemctl restart httpd</code>报错：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Job for httpd.service failed because the control process exited with error code. See &quot;systemctl status httpd.service&quot; and &quot;journalctl -xe&quot; for details</span><br></pre></td></tr></table></figure><p><strong>解决方法</strong></p><p>Ⅰ.<code>systemctl status httpd.service </code>查看，发现80端口是否被占用</p><p>Ⅱ. 用<code>netstat -antlp | grep 80</code>查看端口被哪一服务占用</p><p>Ⅲ. 关闭占用的服务 <code>systemctl stop squid.service </code></p><p>Ⅳ. 启动 <code>systemctl start httpd</code> 服务</p><h6 id="三、检查80端口失败"><a href="#三、检查80端口失败" class="headerlink" title="三、检查80端口失败"></a>三、检查80端口失败</h6><p><em>netstat -ntlp | grep 80</em></p><p>报错：<code>-bash: netstat: command not found</code></p><p><strong>解决方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;Web-简介&quot;&gt;&lt;a href=&quot;#Web-简介&quot; class=&quot;headerlink&quot; title=&quot;Web 简介&quot;&gt;&lt;/a&gt;Web 简介&lt;/h4&gt;&lt;p&gt;web（World Wide Web）即全球&lt;a href=&quot;https://baike.baidu.com</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Web" scheme="http://example.com/categories/Web/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Web" scheme="http://example.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>学习微信小程序（一）</title>
    <link href="http://example.com/2024/06/30/%E5%AD%A6%E4%B9%A0%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2024/06/30/%E5%AD%A6%E4%B9%A0%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2024-06-30T07:48:44.000Z</published>
    <updated>2024-06-30T08:04:51.892Z</updated>
    
    <content type="html"><![CDATA[<h4 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h4><ul><li>能够知道如何创建小程序项目</li><li>能够清楚小程序项目的基本组成结构</li><li>能够知道小程序页面由几个部分组成</li><li>能够知道小程序中常见的组件如何使用</li><li>能够知道小程序如何进行开发和发布</li></ul><h4 id="小程序简介"><a href="#小程序简介" class="headerlink" title="小程序简介"></a>小程序简介</h4><p>一、小程序与普通网页开发的区别</p><p>①运行环境不同</p><p>网页运行在浏览器环境中</p><p>小程序运行在微信环境中</p><p>②API 不同</p><p>由于运行环境不同，所以小程序中，<strong>无法调用BOM和DOM的API</strong>。但是小程序可以调用微信环境提供的各种API</p><p>例如：地理定位、扫码、支付</p><p>③开发模式不同</p><p>网页开发模式：浏览器 + 代码编辑器</p><p>小程序有自己的一套标准开发模式：</p><ul><li>申请小程序开发账号</li><li>安装小程序开发者工具</li><li>创建和配置小程序项目</li></ul><h4 id="注册小程序开发账号-amp-安装开发者工具"><a href="#注册小程序开发账号-amp-安装开发者工具" class="headerlink" title="注册小程序开发账号 &amp; 安装开发者工具"></a>注册小程序开发账号 &amp; 安装开发者工具</h4><p>略</p><h4 id="创建第一个小程序"><a href="#创建第一个小程序" class="headerlink" title="创建第一个小程序"></a>创建第一个小程序</h4><ol><li><p>点击 “加号” 按钮</p></li><li><p>填写项目信息</p><ul><li>新建项目</li><li>填写目录、AppID</li><li>不使用云服务 语言：Javascript</li><li>点击新建</li></ul></li><li><p>项目创建完成</p></li><li><p>在模拟器上查看项目效果</p><ul><li>编译</li></ul></li><li><p>在真机上预览效果</p><ul><li>预览</li><li>使用手机扫码</li></ul></li><li><p>主页面的5个组成部分</p><ol><li>菜单栏</li><li>工具栏</li><li>模拟器</li><li>代码编辑区</li><li>调试区</li></ol></li></ol><h4 id="认识小程序的基本结构"><a href="#认识小程序的基本结构" class="headerlink" title="认识小程序的基本结构"></a>认识小程序的基本结构</h4><h5 id="小程序的项目结构"><a href="#小程序的项目结构" class="headerlink" title="小程序的项目结构"></a>小程序的项目结构</h5><p>一、了解项目的基本组成结构</p><p>①pags 用来存放所有小程序的页面</p><p>②utils 用来存放工具性质的模块（例如：格式化时间自定义模块）</p><p>③app.js 小程序项目的入口文件</p><p>④app.json 小程序项目的全局配置文件</p><p>⑤app.wxss 小程序项目的全局样式文件</p><p>⑥project.config.json 项目的配置文件</p><p>⑦sitemap.json 用来配置小程序及其页面是否允许被微信索引</p><p>二、小程序页面组成部分</p><p>小程序官方建议把所有小程序的页面，都存在<strong>pages目录</strong>中，以<strong>单独的文件夹</strong>存在</p><p>每个页面有<strong>由 4 个基本文件</strong>组成，它们分别为：</p><p>① .js文件（页面的脚本文件，存放页面的数据、事件处理函数等）</p><p>② .json文件（当前页面的配置文件，配置窗口的外观、表现等）</p><p>③ .wxml文件（页面模板结构文件）</p><p>④ .wxss文件（当前页面的样式表文件）</p><h5 id="小程序的代码构成"><a href="#小程序的代码构成" class="headerlink" title="小程序的代码构成"></a>小程序的代码构成</h5><h6 id="JSON文件"><a href="#JSON文件" class="headerlink" title="JSON文件"></a>JSON文件</h6><ol><li><p>JSON 配置文件的作用</p><p><strong>JSON 是一种数据格式</strong>，在实际开发中，JSON总是以<strong>配置文件</strong>的形式出现。小程序项目中也不例外：通过不同的 .json文件，可以对小程序项目进行不同级别的配置。</p><p>小程序项目中有4种json配置文件，分别是</p><p>①项目根目录的<strong>app.json</strong>配置文件</p><p>②项目根目录的<strong>project.config.json</strong>配置文件</p><p>③项目根目录的sitemap.json配置文件</p><p>④<strong>每个页面文件夹中的.json配置文件</strong></p></li><li><p>app.json文件</p><p>app.json是当前小程序的<strong>全局配置</strong>，包括了小程序的所有<strong>页面路径、窗口外观、界面表现、底部tab</strong>等。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;pages&quot;: [</span><br><span class="line">    &quot;pages/index/index&quot;,</span><br><span class="line">    &quot;pages/logs/logs&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;window&quot;: &#123;</span><br><span class="line">    &quot;navigationBarTextStyle&quot;: &quot;#fff&quot;,</span><br><span class="line">    &quot;navigationBarTitleText&quot;: &quot;WeChat&quot;,</span><br><span class="line">    &quot;navigationBarBackgroundColor&quot;: &quot;black&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;style&quot;: &quot;v2&quot;,</span><br><span class="line">  &quot;sitemapLocation&quot;: &quot;sitemap.json&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单了解4个配置项的作用</p><p>① pages：用来记录当前小程序所有页面的路径</p><p>② window：全局定义小程序所有页面的背景色、文字颜色等</p><p>③ style：全局定义小程序组件所使用的样式</p><p>④ sitemapLocation：用来指明sitemap.json的位置</p></li><li><p>project.config.json文件</p><p>project.config.json是项目配置文件，用来记录我们<strong>对小程序开发工具所做的个性化配置</strong>，例如：</p><ul><li><strong>setting</strong> 中保存了<strong>编译相关的配置</strong></li><li><strong>projectname</strong> 中保存的是<strong>项目名称</strong></li><li><strong>appid</strong> 中保存的是<strong>小程序的账号ID</strong></li></ul></li><li><p>sitemap.json文件</p><p>微信现已开放<strong>小程序内搜索</strong>，效果类似于PC网页的SEO。sitemap.json文件用来<strong>配置小程序是否允许微信索引</strong>。</p><p>当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索关键字和页<br>面的索引匹配成功的时候，小程序的页面将可能展示在搜索结果中。</p><p>注意:sitemap的索引提示是默认开启的，如需要关闭sitemap的索引提示，可在小程序项目配置文件<br><strong>project.config.json</strong> 的 <strong>setting</strong> 中配置字段<strong>checkSiteMap</strong>为<strong>false</strong></p></li><li><p>页面的.json配置文件</p><p>小程序中的每一个页面，可以使用.json文件来对本页面窗口外观进行配置，页面中的配置会覆盖app.json的window中相同的配置项</p></li><li><p>新建小程序页面</p><p>只需要在app.json -&gt; pages 中新增页面的存放路径即可自动生成新的页面</p></li><li><p>修改项目首页</p><p>只需要调整app.json -&gt; pages 数组中页面路径的前后顺序即可</p></li></ol><h6 id="WXML模板"><a href="#WXML模板" class="headerlink" title="WXML模板"></a>WXML模板</h6><ol><li><p>什么是WXML</p><p>WXML是小程序框架设计的一套标签语言，用来构建小程序页面的结构，类似于网页开发的HTML</p></li><li><p>WXML和HTML的区别</p><p>①标签名称不同</p><ul><li>HTML（div,span,img,a）</li><li>WXML（view,text,image,navigator）</li></ul><p>②属性点不同</p><ul><li><pre><code class="html">&lt;a href=&quot;#&quot;&gt;超链接&lt;/a&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ~~~wxml</span><br><span class="line">  &lt;navigator url=&quot;/pages/home/home&quot;&gt;&lt;/navigator&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul><p>③提供了类似于Vue中的模板语法</p><ul><li>数据绑定</li><li>列表渲染</li><li>条件渲染</li></ul></li><li><p>什么是WXSS</p><p>WXSS是一套样式语言，用于描述WXML的组件样式，类似于网页开发中的CSS</p></li><li><p>WXSS和CSS的区别</p><p>①新增了rpx尺寸单位</p><ul><li>CSS中需要手动进行像素单位换算，例如rem</li><li>WXSS在底层支持新的尺寸单位rpx，在不同大小的屏幕上小程序会自动进行换算</li></ul><p>②提供了全局和局部样式</p><ul><li>项目根目录中的app.wxss会作用于所有小程序页面</li><li>局部页面的.wxss样式仅对当前页面生效</li></ul><p>③WXSS仅支持部分CSS选择器</p><ul><li>.calss和#id</li><li>element</li><li>并集选择器、后代选择器</li><li>::after 和 ::before 等伪类选择器</li></ul></li></ol><h6 id="JS逻辑交互"><a href="#JS逻辑交互" class="headerlink" title="JS逻辑交互"></a>JS逻辑交互</h6><ol><li><p>小程序中的..js文件</p><p>一个项目仅仅提供界面展示是不够的，在小程序中，我们通过.js文件来处理用户的操作。例如:<strong>响应用户的</strong><br><strong>点击、获取用户的位置</strong>等等。</p><p>小程序中的JS文件分为三大类，分别是：</p><p>① app.js</p><ul><li>是<strong>整个小程序项目的入口文件</strong>，通过调用<strong>App()函数</strong>来启动整个小程序</li></ul><p>②页面的.js文件</p><ul><li>是<strong>页面的入口文件</strong>，通过调用<strong>Page()函数</strong>来创建并运行页面</li></ul><p>③普通的.js文件</p><ul><li>是<strong>普通的功能模块文件</strong>，用来封装<strong>公共的函数或属性</strong>供页面使用</li></ul></li></ol><h5 id="小程序的宿主环境"><a href="#小程序的宿主环境" class="headerlink" title="小程序的宿主环境"></a>小程序的宿主环境</h5><p>小程序只能在微信里运行，例如</p><p>Windows的软件只能在Windows下运行</p><p>Mac的软件只能在Mac下运行</p><h5 id="小程序的组件"><a href="#小程序的组件" class="headerlink" title="小程序的组件"></a>小程序的组件</h5><p>小程序中的组件也是由宿主环境提供的，开发者可以基于组件快速搭建出漂亮的页面结构。官方把小程序的组<br>件分为了9大类，分别是:</p><p>①视图容器<br>②基础内容<br>③表单组件<br>④导航组件<br>⑤媒体组件<br>⑥map 地图组件<br>⑦canvas 画布组件<br>⑧开放能力<br>⑨无障碍访问</p><h5 id="常用的视图组件"><a href="#常用的视图组件" class="headerlink" title="常用的视图组件"></a>常用的视图组件</h5><h6 id="view的基本使用"><a href="#view的基本使用" class="headerlink" title="view的基本使用"></a>view的基本使用</h6><ul><li>普通的视图区域</li><li>类似于HTML中的div，是一个块级元素</li><li>常用来实现页面的布局效果</li></ul><p>实现flex横向布局效果</p><p>list.wxml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;test&quot;&gt;</span><br><span class="line">&lt;view&gt;A&lt;/view&gt;</span><br><span class="line">    &lt;view&gt;B&lt;/view&gt;</span><br><span class="line">    &lt;view&gt;C&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p>list.wxss</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.test viwx &#123;</span><br><span class="line"> width:100px;</span><br><span class="line"> height:100px </span><br><span class="line">&#125;</span><br><span class="line">.test &#123;</span><br><span class="line"> display: flex;</span><br><span class="line"> justify-content: space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="scroll-view的基本使用"><a href="#scroll-view的基本使用" class="headerlink" title="scroll-view的基本使用"></a>scroll-view的基本使用</h6><ul><li>滚动列表</li></ul><p>scroll-y 竖向滑动</p><p>scroll-x 横向滑动</p><h6 id="swiper和swiper-item的基本使用"><a href="#swiper和swiper-item的基本使用" class="headerlink" title="swiper和swiper-item的基本使用"></a>swiper和swiper-item的基本使用</h6><ul><li>轮播图容器和轮播item组件</li></ul><p>在swiper标签里添加属性即可</p><p>swiper-item是轮播里的内容（可以添加图片或者文字）</p><p>*<strong>轮播图默认高度为150px</strong></p><p>swiper常用属性</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">默认值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">indicator-dots</td><td align="center">Boolean</td><td align="center">false</td><td align="center">是否显示面板指点</td></tr><tr><td align="center">indicator-color</td><td align="center">color</td><td align="center">rgba(0,0,0,.3)</td><td align="center">指示点颜色</td></tr><tr><td align="center">indicator-active-color</td><td align="center">color</td><td align="center">#000000</td><td align="center">当前选中的指示点颜色</td></tr><tr><td align="center">autoplay</td><td align="center">Boolean</td><td align="center">false</td><td align="center">是否自动切换</td></tr><tr><td align="center">interval</td><td align="center">number</td><td align="center">5000</td><td align="center">自动切换时间间隔</td></tr><tr><td align="center">circular</td><td align="center">Boolean</td><td align="center">false</td><td align="center">是否采用衔接滑动</td></tr></tbody></table><h6 id="text组件的基本使用"><a href="#text组件的基本使用" class="headerlink" title="text组件的基本使用"></a>text组件的基本使用</h6><ul><li>文本组件</li><li>类似于HTML中的span标签，是一个行内元素</li></ul><p>selectable属性，实现长按选中文本内容的效果</p><h6 id="rich-text的基本使用"><a href="#rich-text的基本使用" class="headerlink" title="rich-text的基本使用"></a>rich-text的基本使用</h6><ul><li>富文本组件</li><li>支持把HTML字符串渲染为WXML结构</li></ul><p>通过rich-text组件的nodes属性节点，把HTML字符串渲染为对应的UI结构，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;rich-text nodes=&quot;&lt;h1 style=&#x27;color:red;&#x27;&gt;标题&lt;h1&gt;&quot;&gt;&lt;/rich-text&gt;</span><br></pre></td></tr></table></figure><h6 id="button的基本使用"><a href="#button的基本使用" class="headerlink" title="button的基本使用"></a>button的基本使用</h6><ul><li>按钮组件</li><li>功能比HTML中的button按钮丰富</li><li>通过open-type属性可以调用微信提供的各种功能（客服、转发、获取用户授权、获取用户信息等）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt; ~通过 type指定按钮类型~ &lt;/view&gt;</span><br><span class="line"></span><br><span class="line">&lt;button&gt;默认按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;primary&quot;&gt;主色调按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;warn&quot;&gt;警告按钮&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;view&gt;~~~size=&quot;mini&quot;小尺寸按钮~~~&lt;/view&gt;</span><br><span class="line"></span><br><span class="line">&lt;button size=&quot;mini&quot;&gt;默认按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;primary&quot;size=&quot;mini&quot;&gt;主色调按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;warn&quot; size=&quot;mini&quot;&gt;警告按钮&lt;/button&gt;</span><br><span class="line"> </span><br><span class="line">&lt;view&gt;~~~plain 镂空按钮~~~&lt;/view&gt;</span><br><span class="line">&lt;button size=&quot;mini&quot;plain&gt;默认按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;primary&quot; size=&quot;mini&quot;plain&gt;主色调按钮&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;warn&quot; size=&quot;mini&quot;plain&gt;警告按钮&lt;/button&gt;</span><br></pre></td></tr></table></figure><h6 id="image的基本使用"><a href="#image的基本使用" class="headerlink" title="image的基本使用"></a>image的基本使用</h6><ul><li>图片组件</li><li>image组件默认宽度约300px、高度约240px</li></ul><p>image 组件的 mode属性用来指定图片的裁剪和缩放模式，<strong>常用的mode属性值如下</strong>:</p><table><thead><tr><th align="center">mode值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">scaleToFill</td><td align="center">(默认值)缩放模式，不保持纵横比缩放图片，使图片的宽高完全拉伸至填满image 元素</td></tr><tr><td align="center">aspectFit</td><td align="center">缩放模式，保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。</td></tr><tr><td align="center">aspectFill</td><td align="center">缩放模式，保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方<br/>aspectFill<br/>向是完整的，另一个方向将会发生截取。</td></tr><tr><td align="center">widthFix</td><td align="center">缩放模式，宽度不变，高度自动变化，保持原图宽高比不变</td></tr><tr><td align="center">heightFix</td><td align="center">缩放模式，高度不变，宽度自动变化，保持原图宽高比不变</td></tr></tbody></table><h6 id="navigator的基本使用"><a href="#navigator的基本使用" class="headerlink" title="navigator的基本使用"></a>navigator的基本使用</h6><ul><li>页面导航组件</li><li>类似于HTML中的a标签</li></ul><h4 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h4><ol><li><p>数据绑定的基本原则</p><p>①在data中定义数据</p><p>②在WXML中使用数据</p></li><li><p>在data中定义页面的数据</p><p>在页面对应的.js文件中，把数据定义到data对象中即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line"><span class="comment">// 字符串类型的数据</span></span><br><span class="line"><span class="attr">info</span>: <span class="string">&#x27;init data&#x27;</span>,</span><br><span class="line"><span class="comment">// 数组类型的数据</span></span><br><span class="line"><span class="attr">msgList</span>: [&#123;<span class="attr">msg</span>: <span class="string">&#x27;hello&#x27;</span>&#125;, &#123;<span class="attr">msg</span>: <span class="string">&#x27;world&#x27;</span>&#125;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>Mustache语法的格式</p><p>把data中的数据绑定到页面中渲染，使用Mustache语法（双大括号）将变量包起来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;&#123;&#123;变量&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure></li><li><p>Mustache语法的应用场景</p><ul><li><p>绑定内容<br>页面数据如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">info</span>: <span class="string">&#x27;init data&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>页面结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;&#123;&#123; info &#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><ul><li>绑定属性<br>   页面数据如下：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">  <span class="attr">imgSrc</span>: <span class="string">&#x27;init data&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><pre><code>   页面结构如下：   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;image src=&quot;&#123;&#123;imgSrc&#125;&#125;&quot;&gt;&lt;/image&gt;</span><br></pre></td></tr></table></figure>   </code></pre><ul><li><p>运算（三元运算、算术运算等）</p><ul><li><p>三元运算</p><p>页面数据如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">   <span class="attr">data</span>: &#123;</span><br><span class="line">       <span class="attr">randomNum</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span> <span class="comment">//生成 10 以内的随机数</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><p> 页面的结构如下：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;&#123;&#123; randomNumber &gt;= 5 ? &#x27;随机数大于或者等于5&#x27; : &#x27;随机数小于5&#x27; &#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure></li><li><p>算数运算</p><p>页面数据如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">randomNum</span>: <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toFixed</span>(<span class="number">2</span>) <span class="comment">//生成一个带两位小数的随机数，例如：0.34</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>页面的结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;生成100以内的随机数：&#123;&#123;randomNuum * 100&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h4 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h4><ol><li><p>什么是事件</p><p>事件是渲染层到逻辑层的通讯方式。通过事件可以将用户在渲染层产生的行为，反馈到逻辑层进行业务处理。</p><p>①描述交互事件 ②用户交互触发事件 ③逻辑层收到回调 </p><p>渲染层Webview → 客户端Native→逻辑层JsCore</p></li><li><p>小程序中常用的事件</p><table><thead><tr><th align="center">类型</th><th align="center">绑定方式</th><th align="center">事件描述</th></tr></thead><tbody><tr><td align="center">tap</td><td align="center">bindtap或bind:tap</td><td align="center">手指触摸后马上离开，类似于HTML中的click事件</td></tr><tr><td align="center">input</td><td align="center">bindinpu或bind:input</td><td align="center">文本框的输入事件</td></tr><tr><td align="center">change</td><td align="center">bindchange或bind:change</td><td align="center">状态改变时触发</td></tr></tbody></table></li><li><p>事件对象的属性列表</p><p>当事件回调触发的时候，会收到一个事件对象event，它的详细属性如下表所示：</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">type</td><td align="center">String</td><td align="center">事件类型</td></tr><tr><td align="center">timeStamp</td><td align="center">Integer</td><td align="center">页面打开到触发所经过的毫秒数</td></tr><tr><td align="center"><strong>target</strong></td><td align="center"><strong>Object</strong></td><td align="center"><strong>触发事件的组件的一些属性值集合</strong></td></tr><tr><td align="center">currentTarget</td><td align="center">Object</td><td align="center">当前组件的一些属性值集合</td></tr><tr><td align="center"><strong>detail</strong></td><td align="center"><strong>Object</strong></td><td align="center"><strong>额外的信息</strong></td></tr><tr><td align="center">touches</td><td align="center">Array</td><td align="center">触摸事件，当前停留在屏幕中的触摸点信息的数组</td></tr><tr><td align="center">changedTouches</td><td align="center">Array</td><td align="center">触摸事件，当前变化的触摸点信息的数组</td></tr></tbody></table></li><li><p>target和currentTarget的区别</p><p><strong>target</strong>是<strong>触发该事件的源头组件</strong>，而<strong>currentTarget</strong>则是<strong>当前事件所绑定的组件</strong></p><p>点击内部按钮时，点击事件以冒泡的方式向外扩散，也会触发外层view的tap事件处理函数。此时，对于外层的view来说：</p><ul><li>e.target 指向的是触发事件的源头组件，因此，e.target是内部按钮组件</li><li>e.currentTarget 指向的是当前正在触发事件的那个组件，因此，<strong>e.currentTarget是当前的view组件</strong></li></ul></li><li><p>bindtap的语法格式</p><p>在小程序中，不存在HTML中的onclick鼠标点击事件，而是通过<strong>tap事件</strong>来响应用户的触发行为。</p><p>①通过bindtap，可以为组件绑定tap触摸事件，语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;primary&quot; bindtap=&quot;btnTapHandler&quot;&gt;按钮&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>②在页面的.js文件中定义对应的事件处理函数，事件参数通过形参event（一般简写成e）来接收</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span> (&#123;</span><br><span class="line">    <span class="title function_">btnTapHandler</span>(<span class="params">e</span>) &#123; <span class="comment">// 按钮的 tap 事件处理函数</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e) <span class="comment">// 事件参数对象 e</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在事件处理函数中为data中的数据赋值</p><p>通过调用**this.setData(dataObject)**方法，可以给页面data中的数据重新赋值，示例如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 页面的.js 文件</span></span><br><span class="line"><span class="title class_">Page</span> (&#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 修改 count 的值</span></span><br><span class="line">    <span class="title function_">changeCount</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">count</span> + <span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>事件传参</p><p>小程序中的事件传参比较特殊，<strong>不能绑定事件的同时为事件处理函数传递参数</strong>。例如，下面的代码<strong>不能正常</strong>工作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=&quot;primary&quot; bindtap=&quot;btnHandler(123)&quot;&gt;按钮&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>因为小程序会把bindtap的属性值，统一当作事件名称来处理</p><p>正确的传参方式如下：</p><p>可以为组件提供**data-**<em>自定义属性传参，</em>是参数的名字，示例代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button bindtap=&quot;btnHandler&quot; data-info=&quot;&#123;&#123;123&#125;&#125;&quot;&gt;按钮&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>最终：</p><ul><li><strong>info</strong> 会被解析为<strong>参数的名字</strong></li><li>数值<strong>123</strong>会被解析为<strong>参数的值</strong></li></ul><p>获取参数的值：</p><p>在事件函数中，通过event.target.dataset.参数名即可获取到具体参数的值，示例代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">btHandler</span>(<span class="params">event</span>) &#123;</span><br><span class="line">    <span class="comment">// dataset 是一个对象，包含了所有通过 data-* 传递过来的参数项</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">target</span>.<span class="property">dataset</span>)</span><br><span class="line">    <span class="comment">// 通过 dataset 可以访问到具体参数的值</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">info</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>bindinput 的语法格式</p><p>在小程序中，通过input事件来响应文本框的输入事件，语法格式如下：</p><p>① 通过 bindinput，可以为文本框绑定输入事件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input bindinput=&quot;inputHandler&quot;&gt;&lt;input&gt;</span><br></pre></td></tr></table></figure><p> ② 在页面的 .js 文件中定义事件处理函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">inputHandler</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="comment">//e.detail.value 是变化过后，文本框最新的值</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现文本框和data之间的数据同步</p><p>实现步骤：</p><p>①定义数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&#x27;你好&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>②渲染结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input value=&quot;&#123;&#123;msg&#125;&#125;&quot; bindinput=&quot;iptHandler&quot;&gt;&lt;/input&gt;</span><br></pre></td></tr></table></figure><p>③美化样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">border: 1px solid #eee;</span><br><span class="line">padding: 5px;</span><br><span class="line">margin: 5px</span><br><span class="line">border-radius: 3px</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>④绑定input事件处理函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文本框内容改变的事件</span></span><br><span class="line"><span class="title function_">iptHandler</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">setData</span> (&#123;</span><br><span class="line">        <span class="comment">// 通过 e.detail.value</span></span><br><span class="line">        <span class="attr">msg</span>: e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h4><ol><li><p>wx:if</p><p>在小程序中，使用 <strong>wx:if&#x3D;”“</strong> 来判断是否需要渲染该代码块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:if=&quot;&#123;&#123;condition&#125;&#125;&quot;&gt; True &lt;/view&gt;</span><br></pre></td></tr></table></figure><p>也可以用 wx:elif 和 wx:else 来添加 else 判断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:if=&quot;&#123;&#123;type === 1&#125;&#125;&quot;&gt; 男 &lt;/view&gt;</span><br><span class="line">&lt;view wx:elif=&quot;&#123;&#123;type === 2&#125;&#125;&quot;&gt; 女 &lt;/view&gt;</span><br><span class="line">&lt;view wx:else&gt; 保密 &lt;/view&gt;</span><br></pre></td></tr></table></figure></li><li><p>结合block使用wx:if</p><p>如果要一次性控制多个组件的展示与隐藏，可以使用一个block标签将多个组件包裹起来，并再block标签上使用wx:if控制属性，示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;block wx:if=&quot;&#123;&#123;true&#125;&#125;&quot;&gt;</span><br><span class="line">&lt;view&gt; view1 &lt;view&gt;</span><br><span class="line">&lt;view&gt; view2 &lt;view&gt;</span><br><span class="line">&lt;/block&gt;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：block并不是一个组件，它只是一个包裹性质的容器，<strong>不会在页面做任何渲染</strong>。</p></li><li><p>hidden</p><p>在小程序中，直接使用 <strong>hidden</strong>&#x3D;”“ 也能控制元素的显示与隐藏：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view hidden=&quot;&#123;&#123; condition &#125;&#125;&quot;&gt; 条件 true 隐藏，条件为 false 显示 &lt;/view&gt;</span><br></pre></td></tr></table></figure></li><li><p>wx:if 与 hidden 的对比</p><p>① 运行方式不同</p><ul><li>wx:if 以<strong>动态创建和移除元素</strong>的方式，控制元素的展示与隐藏</li><li>hidden 以<strong>切换样式</strong>的方式（display: none&#x2F;block;），控制元素的显示与隐藏</li></ul><p>② 使用建议</p><ul><li><strong>频繁切换</strong>时，建议使用hidden</li><li><strong>控制条件复杂</strong>时，建议使用 wx:if 搭配 wx:elif、wx:else 进行展示与隐藏的切换</li></ul></li></ol><h4 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h4><ol><li><p>wx:for</p><p>通过 wx:for 可以根据指定的数组，循环渲染重复的组件结构，语法示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:for=&quot;&#123;&#123;array&#125;&#125;&quot;&gt;</span><br><span class="line">索引是：&#123;&#123;index&#125;&#125; 当前是：&#123;&#123;item&#125;&#125;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p>默认情况下，当前循环项的索引index表示；当前循环项用item表示。</p></li><li><p>手动指定索引和当前项的变量名*</p><ul><li><p>使用 wx:for-index 可以指定当前循环项的索引的变量名</p></li><li><p>使用 wx:for-item 可以指定当前项的变量名</p><p>示例代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:for=&quot;&#123;&#123;array&#125;&#125;&quot;  wx:for-index=&quot;idx&quot; wx:for-item=&quot;it&quot;&gt;</span><br><span class="line">索引是：&#123;&#123;idx&#125;&#125; 当前是：&#123;&#123;it&#125;&#125;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>wx:key 的使用</p><p>类似于Vue列表渲染中的 :key ，小程序在实现列表渲染时，也建议为渲染出来的列表指定唯一的key值，从而提高渲染的效率，示例代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// data 数据</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">userList</span>: [</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;小红&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;小黄&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;小白&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// wxml 结构</span></span><br><span class="line">&lt;view <span class="attr">wx</span>:<span class="keyword">for</span>=<span class="string">&quot;&#123;&#123;userList&#125;&#125;&quot;</span> wx.<span class="property">key</span>=<span class="string">&quot;id&quot;</span>&gt;&#123;&#123;item.<span class="property">name</span>&#125;&#125;&lt;/item&gt;</span><br></pre></td></tr></table></figure></li></ol><p>wx:for 加 wx:key 才不会报警告⚠</p><h4 id="WXSS-WXSS和CSS的关系"><a href="#WXSS-WXSS和CSS的关系" class="headerlink" title="WXSS - WXSS和CSS的关系"></a>WXSS - WXSS和CSS的关系</h4><ol><li><p>什么是WXSS</p><p>WXSS是一套样式语言，用于美化WXML的组件样式，类似于HTML中的CSS</p></li><li><p>WXSS和CSS的关系</p><p>WXSS具有CSS大部分的特性，同时，WXSS还对CSS进行了扩充以及修改，以适应小程序的开发</p><p>与CSS相比，WXSS扩展的特性有：</p><ul><li><p><strong>rpx</strong> 尺寸单位</p><ol><li><p>什么是rpx尺寸单位</p><p>rpx是微信小程序独有的用来解决屏适配的尺寸单位</p></li><li><p>rpx的实现原理</p><p>rpx的实现原理非常简单：鉴于不同设备屏幕大小不同，为实现屏幕的自动适配，rpx把所有设备的屏幕，在宽度上<strong>等分为750份</strong>（即：<strong>当前屏幕的总宽度为150rpx</strong>）</p><ul><li><p>在较小的设备上，1rpx所代表的宽度较小</p></li><li><p>在较大的设备上，1rpx所代表的宽度较大</p></li></ul><p>小程序在不同的设备上运行，会自动换算对应的像素单位，从而实现屏幕适配</p></li><li><p><strong>rpx与px之间的换算</strong></p><p>在iPhone6上，屏幕宽度为375px，共有750个物理像素，等分为750rpx</p><p>750rpx &#x3D; 375px &#x3D;750 物理像素</p><p>1rpx &#x3D; 0.5px &#x3D; 1像素</p><p><strong>官方建议：开发小程序时，设计师可以用iPhone6作为视觉稿的标准</strong>（因为iPhone6是0.5px）</p></li></ol></li><li><p><strong>@import</strong> 样式导入</p><ol><li><p>什么是样式导入</p><p>使用WXSS提供**@import**语法，可以导入外联的样式表。</p></li><li><p>@import 后跟需要导入的外联样式表的相对路径，用 ; 表示语句结束。示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/** com.wxss **/</span><br><span class="line">.small-p &#123;</span><br><span class="line">padding:5px</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/** app.wxss **/</span><br><span class="line">@import &quot;com.wxss&quot;;</span><br><span class="line">.middle-p &#123;</span><br><span class="line">padding:15px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ul></li></ol><h4 id="WXSS-全局样式与局部样式"><a href="#WXSS-全局样式与局部样式" class="headerlink" title="WXSS - 全局样式与局部样式"></a>WXSS - 全局样式与局部样式</h4><ol><li><p>全局样式</p><p>定义在 <strong>app.wxss</strong> 中的样式为 <strong>全局样式</strong>，作用于每一个页面。</p></li><li><p>局部样式</p><p>在页面的 <strong>.wxss</strong> 文件的样式为<strong>局部样式</strong>，只作用于当前页面。</p></li></ol><p>注意：</p><p>① 当局部样式和全局样式冲突时，根据就近原则，局部样式会覆盖全局样式</p><p>② 当局部样式的权重大于或等于全局样式的权重时，才会覆盖全局的样式</p><ul><li><p>全局配置</p><ol><li><p>全局配置文件及常用的配置项</p><p>小程序根目录下的 app.json 文件是小程序的全局配置文件。常用的配置项如下：</p><p>① pages：记录当前小程序所有页面的存放路径</p><p>② window：全局设置小程序窗口的外观</p><p>③ tabBar：设置小程序底部的tabBar效果</p><p>④style：是否启用新版组件样式</p></li></ol></li><li><p>window</p><ol><li><p>小程序窗口的组成部分</p><ul><li>navigationBar 导航栏区域</li><li>background 背景区域（默认不可见，下拉才显示）</li><li>页面的主体区域（用来显示wxml中的布局）</li></ul></li><li><p>了解window节点常用的配置项</p><table><thead><tr><th align="center">属性名</th><th align="center">类型</th><th align="center">默认值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">navigationBarTitleText</td><td align="center">String</td><td align="center">字符串</td><td align="center">导航栏标题文字内容</td></tr><tr><td align="center">navigationBarBackgroundColor</td><td align="center">HexColor</td><td align="center">#000000</td><td align="center">导航栏背景颜色，如 #000000</td></tr><tr><td align="center">navigationBarTextStyle</td><td align="center">String</td><td align="center">white</td><td align="center">导航栏标题颜色，仅支持<strong>black</strong> &#x2F; <strong>white</strong></td></tr><tr><td align="center">backgroundColor</td><td align="center">HexColor</td><td align="center">#ffffff</td><td align="center">窗口的背景色</td></tr><tr><td align="center">backgroundTextStyle</td><td align="center">String</td><td align="center">dark</td><td align="center">下拉loading的样式，仅支持 <strong>dark</strong> &#x2F; <strong>light</strong></td></tr><tr><td align="center">enablePullDownRefresh</td><td align="center">Boolean</td><td align="center">false</td><td align="center">是否全局开启下拉刷新</td></tr><tr><td align="center">onReachBottomDistance</td><td align="center">Number</td><td align="center">50</td><td align="center">页面上拉触底事件触发时距页面底部距离，单位为px</td></tr></tbody></table><ul><li><p>设置下拉窗口的背景颜色</p><p>当全局开启下拉刷新功能后，默认窗口背景为白色。如果要自定义颜色，设置步骤如下:</p><p>app.json -&gt;  window  -&gt; backgroundColor 指定16进制的颜色 如 #fff000</p></li><li><p>设置下拉刷新的样式</p><p>当全局开启下拉刷新功能后，默认窗口的loading样式为白色，如果要修改样式效果，设置如下：</p><p>app.json -&gt; window -&gt; backgroundTextStyle 指定dark值，可选值只能是<strong>light</strong>和<strong>dark</strong> </p></li><li><p>设置上拉触底的距离</p><p>概念：上拉触底是移动端的专有名词，通过手指上拉的操作，从而加载更多数据的行为，设置如下：</p><p>app.json -&gt; window -&gt; onReachBottomDistance 设置新的数值，默认距离为50px，如果没有特殊需求，建议使用默认即可</p></li></ul></li></ol></li><li><p>tabBar</p><ol><li><p>什么是tabBar</p><p>tabBar 是移动端的页面效果，用于多界面的切换。小程序通常分为：</p><ul><li>底部tabBar</li><li>顶部tabBar</li><li>注意：<ul><li>tarBar最少2个，最多5个</li><li>当渲染顶部tabBar时，不显示icon，只显示文本</li></ul></li></ul></li><li><p>tabBar 的6个组成部分</p><p>① backgroundColor：tabBar的背景色</p><p>② selectedIconPath：选中时的图片路径</p><p>③ borderStyle：tabBar框的颜色</p><p>④ iconPath：未选中的图片路径</p><p>⑤ selectedColor：tabBar选中文字时的颜色</p><p>⑥ color：tabBar上的默认(未选中)文字时的颜色</p></li><li><p>tabBar节点的配置项</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必填</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">position</td><td align="center">String</td><td align="center">否</td><td align="center">bottom</td><td align="center">tabBar的位置，仅支持<strong>bottom</strong>&#x2F;<strong>top</strong></td></tr><tr><td align="center">borderStyle</td><td align="center">Sring</td><td align="center">否</td><td align="center">black</td><td align="center">tabBar上边框的颜色，仅支持<strong>black</strong>&#x2F;<strong>white</strong></td></tr><tr><td align="center">color</td><td align="center">HexColor</td><td align="center">否</td><td align="center"></td><td align="center">tabBar上的默认(未选中)文字时的颜色</td></tr><tr><td align="center">selectedColor</td><td align="center">HexColor</td><td align="center">否</td><td align="center"></td><td align="center">tabBar选中文字时的颜色</td></tr><tr><td align="center">backgroundColor</td><td align="center">HexColor</td><td align="center">否</td><td align="center"></td><td align="center">tabBar的背景色</td></tr><tr><td align="center">list</td><td align="center">Array</td><td align="center">是</td><td align="center"></td><td align="center">tab页签的列表，最少2个，最多5个tab</td></tr></tbody></table></li><li><p>每个tab项的配置选项</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必填</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">pagePath</td><td align="center">String</td><td align="center">是</td><td align="center">页面的路径，页面必须再pages中定义</td></tr><tr><td align="center">text</td><td align="center">String</td><td align="center">是</td><td align="center">tab上显示的文字</td></tr><tr><td align="center">iconPath</td><td align="center">String</td><td align="center">否</td><td align="center">未选中时图片的路径，当position为top时，不显示icon</td></tr><tr><td align="center">selectedIconPath</td><td align="center">String</td><td align="center">否</td><td align="center">选中时的图片路径，当position为top时，不显示icon</td></tr></tbody></table></li><li><p>tabBar怎么写，在app.json</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;tabBar&quot;: &#123;</span><br><span class="line">&quot;list&quot;: [</span><br><span class="line">&#123;</span><br><span class="line">&quot;pagePath&quot;: &quot;pages/index/index&quot;,</span><br><span class="line">&quot;text&quot;: &quot;主页&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;pagePath&quot;: &quot;pages/test/test&quot;,</span><br><span class="line">&quot;text&quot;: &quot;test&quot;</span><br><span class="line">&#125;,</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>建议图标名称 - 包含active的是选中的图标 - 不包含active的是默认图标</p></li></ol></li></ul><h4 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h4><ol><li><p>页面配置文件的作用</p><p>小程序中，每个页面都有自己的 .json 配置文件，用来对当前页面窗口的外观、页面效果等进行配置</p></li><li><p>页面配置和全局配置的关系</p><p>小程序中，app.json 中的window节点，可以全局配置小程序中的每个页面的窗口表现。</p><p>如果某些小程序页面想要拥有特殊的窗口表现，此时，“页面级别的 .json 配置文件” 就可以实现这种需求。</p><p>注意：就近原则</p></li><li><p>页面配置中常用的配置项</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">navigationBarBackgroundColor</td><td align="center">HexColor</td><td align="center">#000000</td><td align="center">当前页面导航栏颜色</td></tr><tr><td align="center">navigationBarTextStyle</td><td align="center">String</td><td align="center">white</td><td align="center">当前页面导航栏标题颜色，仅支持black&#x2F;white</td></tr><tr><td align="center">navigationBarTitleText</td><td align="center">String</td><td align="center"></td><td align="center">当前页面导航栏标题文字内容</td></tr><tr><td align="center">backgroundColor</td><td align="center">HexColor</td><td align="center">#ffffff</td><td align="center">当前页面窗口的背景色</td></tr><tr><td align="center">backgroundTextStyle</td><td align="center">String</td><td align="center">dark</td><td align="center">当前页面下拉loading样式，仅支持dark和light</td></tr><tr><td align="center">enablePullDownRefresh</td><td align="center">Boolean</td><td align="center">false</td><td align="center">是否为当前页面开启下拉刷新的效果</td></tr><tr><td align="center">onReachBottomDistance</td><td align="center">Number</td><td align="center">50</td><td align="center">页面上拉触底事件触发时的页面距离，单位为px</td></tr></tbody></table></li></ol><h4 id="网络数据请求"><a href="#网络数据请求" class="headerlink" title="网络数据请求"></a>网络数据请求</h4><ol><li><p>小程序中的网络数据请求限制</p><p>出于安全性的方面考虑，小程序官方对数据接口的请求做出了两个限制：</p><ul><li><p>只能请求 HTTPS 类型的接口</p></li><li><p>必须将接口的域名添加到信任列表中</p><p>信任列表：详情-项目配置-request 合法域名</p></li></ul></li><li><p>配置request合法域名</p><p>配置步骤：登录微信小程序管理后台 -&gt; 开发 - &gt; 开发设置 -&gt; 服务器域名 -&gt;修改request合法域名</p><p>注意事项：</p><ul><li>域名只支持https协议</li><li>域名不能使用IP地址或localhost</li><li>域名必须经过ICP备案</li><li>服务器域名一个月内最多可申请5次修改</li></ul></li><li><p>发起GET请求</p><p>调用wx.request()方法，可以发起GET数据请求，示例代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">request</span>(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;https://test.cn/api/get&#x27;</span>, <span class="comment">// 请求的接口地址，必须基于 https 协议</span></span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>, <span class="comment">// 请求方式</span></span><br><span class="line">    <span class="attr">data</span>: &#123;   <span class="comment">// 发送到服务器的数据</span></span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>, </span><br><span class="line">        <span class="attr">age</span>: <span class="number">22</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>:<span class="function">(<span class="params">res</span>) =&gt;</span> &#123; <span class="comment">// 请求成功后的回调函数</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>发起POST请求</p></li></ol><p>调用wx.request()方法，可以发起POST数据请求，示例代码如下：</p>   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">request</span>(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;https://test.cn/api/get&#x27;</span>, <span class="comment">// 请求的接口地址，必须基于 https 协议</span></span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, <span class="comment">// 请求方式</span></span><br><span class="line">    <span class="attr">data</span>: &#123;   <span class="comment">// 发送到服务器的数据</span></span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;ls&#x27;</span>, </span><br><span class="line">        <span class="attr">age</span>: <span class="number">22</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>:<span class="function">(<span class="params">res</span>) =&gt;</span> &#123; <span class="comment">// 请求成功后的回调函数</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="5"><li><p>在页面刚加载时请求数据</p><p>在很多情况下，我们需要在页面刚加载的时候，自动请求一些初始化的数据。此时需要在页面的onLoad事件中调用获取数据的函数，示例代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getSwiperList</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getGridList</span>()</span><br><span class="line">&#125;,</span><br><span class="line">  <span class="comment">// 获取轮播图的数据</span></span><br><span class="line"><span class="title function_">getSwiperList</span>(<span class="params"></span>)&#123;...</span><br><span class="line">&#125;,</span><br><span class="line">  <span class="comment">// 获取九宫格的数据</span></span><br><span class="line"><span class="title function_">getGridList</span>(<span class="params"></span>)&#123;...</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p>跳过request合法域名校验</p><p>如果后端程序员仅仅提供了http的协议接口、暂时没有提供https协议的接口</p><p>此时为了不耽误开发的进度，我们可以在微信开发者工具中，临时开启【开发环境不校验请求域名、TLS版本及HTTPS证书】选项，跳过request合法域名的校验。</p><p><strong>详情-本地设置-开发环境不校验请求域名、TLS版本及HTTPS证书</strong></p><p>注意：跳过request合法域名校验的选项，仅限在开发和调试阶段使用！</p></li><li><p>关于跨域和Ajax的说明</p><p>跨域只存在Web开发中，小程序不存在。</p><p>Ajax技术的核心是依赖于浏览器中的XMLHttpRequest这个对象，由于小程序的宿主环境是微信客户端，所以不能叫“发起Ajax请求”，而是叫做“发起网络数据请求”。</p></li></ol><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li><p>能够使用WXML模板语法渲染页面结构</p><p>wx:if、wx:elif、wx:else、hidden、wx:for、wx:key</p></li><li><p>能够使用WXSS样式美化页面结构</p><p>rpx尺寸单位、@import样式导入、全局样式和局部样式</p></li><li><p>能够使用app.json对小程序进行全局性配置</p><p>pages、window、tabBar、style</p></li><li><p>能够使用page.json对小程序页面进行个性化配置</p><p>对单个页面进行个性化配置、就近原则</p></li><li><p>能够知道如何发起网络数据请求</p><p>wx.request() 方法、onLoad() 事件</p></li></ul><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;能够知道如何创建小程序项目&lt;/li&gt;
&lt;li&gt;能够清楚小程序项目的基本组成结构&lt;/li&gt;
&lt;li&gt;能够知道小程序</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="微信小程序" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="微信小程序" scheme="http://example.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>宝塔开心企业版安装教程</title>
    <link href="http://example.com/2024/06/30/%E5%AE%9D%E5%A1%94%E5%BC%80%E5%BF%83%E4%BC%81%E4%B8%9A%E7%89%88%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2024/06/30/%E5%AE%9D%E5%A1%94%E5%BC%80%E5%BF%83%E4%BC%81%E4%B8%9A%E7%89%88%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2024-06-30T07:46:47.000Z</published>
    <updated>2024-06-30T08:05:23.956Z</updated>
    
    <content type="html"><![CDATA[<h4 id="脚本简介"><a href="#脚本简介" class="headerlink" title="脚本简介"></a>脚本简介</h4><p>宝塔面板是一个安全高效的服务器运维面板，在国内相信很多站长都是用的这款面板，搭建网站真的非常方便快捷，仅需要几分钟就能安装好</p><p>宝塔面板是一款服务器管理软件，支持windows和linux系统，可以通过Web端轻松管理服务器，提升运维效率。例如：创建管理网站、FTP、数据库，拥有可视化文件管理器，可视化软件管理器，可视化CPU、内存、流量监控图表，计划任务等功能。</p><h4 id="官方安装命令"><a href="#官方安装命令" class="headerlink" title="官方安装命令"></a>官方安装命令</h4><p>Centos安装脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh https://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec</span><br></pre></td></tr></table></figure><p>Ubuntu&#x2F;Deepin安装脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh https://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec</span><br></pre></td></tr></table></figure><p>Debian安装脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh https://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh ed8484bec</span><br></pre></td></tr></table></figure><p>万能安装脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if [ -f /usr/bin/curl ];then curl -sSO https://download.bt.cn/install/install_panel.sh;else wget -O install_panel.sh https://download.bt.cn/install/install_panel.sh;fi;bash install_panel.sh ed8484bec</span><br></pre></td></tr></table></figure><p>国产龙芯架构安装脚本<strong>（其他CPU请勿使用）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install_panel.sh https://download.bt.cn/install/0/loongarch64/loongarch64_install_panel.sh &amp;&amp; bash install_panel.sh ed8484bec</span><br></pre></td></tr></table></figure><h4 id="开心版升级命令"><a href="#开心版升级命令" class="headerlink" title="开心版升级命令"></a>开心版升级命令</h4><p>如果已安装低版本的开心版，请直接点击右上角更新即可</p><p>如果已安装官网免费版，则执行下面的升级命令即可</p><p>Linux面板8.0.5升级企业版命令①（7.9.10 官方版 &#x2F; 7.9.8 开心版 可以执行这个升级到 8.0.5 开心版）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://io.bt.sy/install/update_panel.sh|bash</span><br></pre></td></tr></table></figure><p>Linux面板8.0.5升级企业版命令②（7.9.10 官方版 &#x2F; 7.9.8 开心版 可以执行这个升级到 8.0.5开心版）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://io.bt.sy/install/update6.sh|bash</span><br></pre></td></tr></table></figure><p>如果由于某些原因让你不想用开心版本，你也可以一键将开心版还原到官方免费版，一键还原命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://download.bt.cn/install/update6.sh|bash</span><br></pre></td></tr></table></figure><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;脚本简介&quot;&gt;&lt;a href=&quot;#脚本简介&quot; class=&quot;headerlink&quot; title=&quot;脚本简介&quot;&gt;&lt;/a&gt;脚本简介&lt;/h4&gt;&lt;p&gt;宝塔面板是一个安全高效的服务器运维面板，在国内相信很多站长都是用的这款面板，搭建网站真的非常方便快捷，仅需要几分钟就能安装好</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="宝塔" scheme="http://example.com/tags/%E5%AE%9D%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Ansible的简介与安装-湫日</title>
    <link href="http://example.com/2023/08/24/Ansible%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/08/24/Ansible%E7%9A%84%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%AE%89%E8%A3%85/</id>
    <published>2023-08-24T11:09:42.000Z</published>
    <updated>2024-06-30T08:06:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ansible常用命令模块"><a href="#ansible常用命令模块" class="headerlink" title="ansible常用命令模块"></a>ansible常用命令模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ansible命令的常用模块使用-ad-hoc模式-批量操作实战</span><br><span class="line"></span><br><span class="line">comman/shell模块   远程执行命令或脚本模块</span><br><span class="line">copy模块发送文件到远程主机模块</span><br><span class="line">yum模块远程安装软件(相当于到远端机器执行yum -y install xxx)</span><br><span class="line">service模块远程管理服务启停模块script模块本地编写脚本，到远程主机执行</span><br><span class="line">file模块远程传目录或文件，做软连接等</span><br><span class="line">group模块远程创建和管理用户组user模块远程创建和管理用户</span><br><span class="line">cron模块远程添加定时任务</span><br><span class="line">mount模块远程添加挂载</span><br><span class="line">get_url模块远程下载文件</span><br><span class="line">systemd模块通过systemd来管理服务启停，类似systemctl start httpd</span><br><span class="line">selinux模块远程控制selinux开启或关闭</span><br><span class="line">setup模块主机信息模块，获取主机的信息</span><br></pre></td></tr></table></figure><h2 id="ansible的相关概念和使用场景"><a href="#ansible的相关概念和使用场景" class="headerlink" title="ansible的相关概念和使用场景"></a>ansible的相关概念和使用场景</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ansible是一个自动化的配置管理工具, ansible集成了丰富的模块,以及强大的功能组件,可以通过一个命令行批量完成一系列的操作。进能减少我们重复性的工作,以提高工作的效率。</span><br><span class="line"></span><br><span class="line">简单的可以理解为: ansible就是一个批量操作工具</span><br><span class="line"></span><br><span class="line">使用场景：</span><br><span class="line">比如: 批量部署服务,我们想有20台服务器,都需要安装nginx服务,用手动?如果100台呢,这种情况就体现到了ansible的作用</span><br><span class="line">又如: 批量更新配置文件,我们有30台机器,配置文件需要统一进行修改,也会用到ansible</span><br><span class="line">又如： 批量发版上线或重启服务，等等，只要需要批量操作时候都可以使用ansible</span><br></pre></td></tr></table></figure><h2 id="ansible的主要功能"><a href="#ansible的主要功能" class="headerlink" title="ansible的主要功能"></a>ansible的主要功能</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1).批量执行远程命令，可以对N多台主机同时进行命令的执行。</span><br><span class="line">2).批量配置软件服务,可以进行自动化的方式配置和管理服务。</span><br><span class="line">3).实现软件开发功能,jumpserver堡垒机底层就是使用ansible来实现的自动化批量管理。</span><br><span class="line">4).编排高级的IT任务, ansible的playbook是一门编程语言,可以用来描绘一套IT剧本架构,完成复杂的任务。类似shell脚本</span><br><span class="line">5),通过roles角色定义,可以定义部署某一个角色任务或某一些角色任务</span><br></pre></td></tr></table></figure><h2 id="ansible的特点"><a href="#ansible的特点" class="headerlink" title="ansible的特点"></a>ansible的特点</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1).学习成本低，学习容易</span><br><span class="line">ansible不需要启动任何服务,仅需要安装对应的ansible工具即可,也不需要单独安装客户端, ssh相当于ansible的客户端不像salt既要学客户端与服务端，还需要学习客户端与服务端中间通讯协议</span><br><span class="line"></span><br><span class="line">2).操作灵活</span><br><span class="line">ansible有较多的模块,提供了丰富的功能,可根据需要灵活使用各个模块功能,playbook则提供类似于编程语言的复杂功能</span><br><span class="line"></span><br><span class="line">3).简单易用</span><br><span class="line">体现在ansible一个命令可以完成很多事情</span><br><span class="line"></span><br><span class="line">4).安全可靠</span><br><span class="line">因为ansible使用了ssh协议进行通讯,既稳定也安全;移植性高:可以将写好的playbook拷贝至任意机进行执行, tcp+ssh的方式传输</span><br><span class="line"></span><br><span class="line">5).幂等性</span><br><span class="line">一个任务执行1遍和执行n遍效果一样,不会因为重复执行带来意外情况</span><br><span class="line"></span><br><span class="line">6).需要python环境</span><br><span class="line">ansible依赖大量的python模块来实现批量管理,需要有python环境: python2.6/2.7/3.x</span><br></pre></td></tr></table></figure><h2 id="ansible的配置文件"><a href="#ansible的配置文件" class="headerlink" title="ansible的配置文件"></a>ansible的配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# rpm-qc ansible</span><br><span class="line">/etc/ansible/ansible.cfg# 主配置文件</span><br><span class="line">/etc/ansible/hosts# 主机清单文件</span><br></pre></td></tr></table></figure><h2 id="ansible的安装方式"><a href="#ansible的安装方式" class="headerlink" title="ansible的安装方式"></a>ansible的安装方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1).rpm安装(一般使用yum安装) (推荐使用)</span><br><span class="line"># wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo </span><br><span class="line"># yum -y install ansible</span><br><span class="line"># 或着</span><br><span class="line"># yum install epel-release</span><br><span class="line"># yum -y install ansible</span><br><span class="line"></span><br><span class="line">2).pip安装（比较麻烦）</span><br><span class="line"># yum install python3 python3-devel python3-pip-y</span><br><span class="line"># pip3 install --upgrade pip -i https://pypi.douban.com/simple/</span><br><span class="line"># pip3 install ansible-i https://pypi.douban.com/simple/</span><br><span class="line"># /usr/local/bin/ansible --version</span><br><span class="line"></span><br><span class="line">推荐使用yum安装,因为使用ansible就是因为它的简单、方便,如果为了使用它,仅安装就大费周折,还不如不用</span><br></pre></td></tr></table></figure><blockquote><p>安装过程</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># yum install epel-release#先安装epel-release</span></span><br><span class="line">[root@node1 ~]<span class="comment"># yum -y install ansible</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible --version</span></span><br><span class="line">ansible 2.9.27</span><br><span class="line">  config file = /etc/ansible/ansible.cfg</span><br><span class="line">  configured module search path = [u<span class="string">&#x27;/root/.ansible/plugins/modules&#x27;</span>, u<span class="string">&#x27;/usr/share/ansible/plugins/modules&#x27;</span>]</span><br><span class="line">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class="line">  executable location = /usr/bin/ansible</span><br><span class="line">  python version = 2.7.5 (default, Aug  7 2019, 00:51:29) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]</span><br></pre></td></tr></table></figure><h2 id="ansible的基本配置"><a href="#ansible的基本配置" class="headerlink" title="ansible的基本配置"></a>ansible的基本配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1)管理端配置主机管理：在hosts文件中添加被管理主机的ip地址列表：</span><br><span class="line">[root@node1 ~]<span class="comment"># vim /etc/ansible/hosts</span></span><br><span class="line">[<span class="built_in">test</span>]          <span class="comment"># 添加一个组名</span></span><br><span class="line">192.168.88.162  <span class="comment"># 添加被管理的主机ip</span></span><br><span class="line">192.168.88.163  <span class="comment"># 添加被管理的主机ip</span></span><br><span class="line"></span><br><span class="line">2)修改ansible的配置文件</span><br><span class="line">[root@node1 ~]<span class="comment"># vim /etc/ansible/ansible.cfg</span></span><br><span class="line">....</span><br><span class="line">host_key_checking = False   <span class="comment">#禁用每次执行ansbile命令检查ssh key host,默认注释,开启即可</span></span><br><span class="line"><span class="comment">#首次连接是否需要检查kev认证，建议放开注释设为False</span></span><br><span class="line"></span><br><span class="line">log_path = /var/log/ansible.log   <span class="comment"># 开启日志记录，默认注释，开启即可</span></span><br><span class="line">accelerate_port = 5099  <span class="comment"># 加速连接端口，释放，默认注释，也可改变端口号，此处没改</span></span><br><span class="line">accelerate_multi_key = <span class="built_in">yes</span>  <span class="comment"># 多密钥释放，默认注释</span></span><br></pre></td></tr></table></figure><h1 id="ansible命令的常用模块使用-ad-hoc模式-批量操作实战"><a href="#ansible命令的常用模块使用-ad-hoc模式-批量操作实战" class="headerlink" title="ansible命令的常用模块使用-ad-hoc模式-批量操作实战"></a>ansible命令的常用模块使用-ad-hoc模式-批量操作实战</h1><h2 id="ansible的ad-hoc模式或命令模式简介"><a href="#ansible的ad-hoc模式或命令模式简介" class="headerlink" title="ansible的ad-hoc模式或命令模式简介"></a>ansible的ad-hoc模式或命令模式简介</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible在命今行中执行的命今,也称为ad-hoc模式,ad-hoc模式其实就是&quot;临时命今&quot;执行完即结束,不会保存用ansible命令模式批量管理主机,对复杂的不方便，需要使用playbook剧本模式。</span><br></pre></td></tr></table></figure><h2 id="ansible常用的模块使用-通过ad-hoc命令行使用"><a href="#ansible常用的模块使用-通过ad-hoc命令行使用" class="headerlink" title="ansible常用的模块使用-通过ad-hoc命令行使用"></a>ansible常用的模块使用-通过ad-hoc命令行使用</h2><h3 id="command或shell模块"><a href="#command或shell模块" class="headerlink" title="command或shell模块"></a>command或shell模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1).<span class="built_in">command</span>或shell模块,执行远程命令,管理被管理端(ad-hoc模式,其实就是临时命令,执行完即结束,不会保存)(都是批量执行命令, shell更强大,什么都能干,如果需要一些管道等复杂命令的操作,则使用shell, <span class="built_in">command</span>完成不了, shell还能执行脚木</span><br><span class="line"></span><br><span class="line">执行远程命令：以下的<span class="built_in">command</span>也可以用shell代替</span><br><span class="line">(-m是指定模块)</span><br><span class="line">(这里的组名是指在vim /etc/ansible/hosts下添加的[<span class="built_in">test</span>]    <span class="comment"># 添加一个组名)</span></span><br><span class="line">ansible 组名 -m <span class="built_in">command</span>/shell -a <span class="string">&quot;执行的远程命令&quot;</span>  <span class="comment"># 管理单独某个模块组名下机器，执行远程机器命令</span></span><br><span class="line"><span class="comment"># 实操</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m command -a &quot;free -m&quot;  # 查询系统内存</span></span><br><span class="line">192.168.88.162 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3770         351        3191          15         227        3192</span><br><span class="line">Swap:          3967           0        3967</span><br><span class="line">192.168.88.163 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3770         184        3418          11         167        3379</span><br><span class="line">Swap:          3967           0        3967</span><br><span class="line"></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">&quot;执行的远程命令&quot;</span>   <span class="comment">#管理所有模块下机器,执行远程机器命令</span></span><br><span class="line"><span class="comment">######################</span></span><br><span class="line">ansible <span class="built_in">test</span> -m <span class="built_in">command</span> -a <span class="string">&quot;ifconfig|grep ens33&quot;</span> -f 50 <span class="comment">#command执行不了，-f 50一次显示50个主机</span></span><br><span class="line">ansible test-m shell -a <span class="string">&quot;ifconfig|grep ens33&quot;</span>-f 50<span class="comment">#shell可以执行，-f 50一次显示50个主机</span></span><br></pre></td></tr></table></figure><h3 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">2).copy模块，批量发送文件到被管理端或向被管理端文件写内容</span><br><span class="line">copy模块下常用参数：</span><br><span class="line">src:推送数据的源文件信息</span><br><span class="line">dest:推送数据的目录路径</span><br><span class="line">backup:对推送传送过去的文件,进行原文件备份,再接收新文件</span><br><span class="line">content:直接批量在皴管理端文件中添加内容</span><br><span class="line">group:将本地文件推送到远端，指定文件属组信息</span><br><span class="line">owner:将本地文件推送到远端，指定文件属主信息</span><br><span class="line">mode:将本地文件推动到远端,指定文件权限信息</span><br><span class="line"></span><br><span class="line">(1).将管理端(ansible机器)上本地文件(/tmp/a.txt)批量发送给被管理端(/tmp/目录):</span><br><span class="line">copy模块注意:所有被管理端需要安装: libselinux-python,此处为192.168.171.129和192.168.171.130上)[root@localhost ~]<span class="comment"># yum install libselinux-python -y    # 默认cent7.x已经安装,若没有安装,需要先安装该包a)批量发送文件：</span></span><br><span class="line">管理端：</span><br><span class="line">[root@node1 ~]<span class="comment"># echo 11111 &gt; /tmp/a.txt</span></span><br><span class="line">[root@node1 ~]<span class="comment"># cat /tmp/a.txt </span></span><br><span class="line">11111</span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m copy -a &quot;src=/tmp/a.txt dest=/tmp/&quot;</span></span><br><span class="line">192.168.88.163 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">&quot;checksum&quot;</span>: <span class="string">&quot;659f5f85766824a4290371a2abfaeb007cd0af4a&quot;</span>, </span><br><span class="line">    <span class="string">&quot;dest&quot;</span>: <span class="string">&quot;/tmp/a.txt&quot;</span>, </span><br><span class="line">    <span class="string">&quot;gid&quot;</span>: 0, </span><br><span class="line">    <span class="string">&quot;group&quot;</span>: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">    <span class="string">&quot;md5sum&quot;</span>: <span class="string">&quot;fa8f294721ab3fbb37793c68ff2cf09b&quot;</span>, </span><br><span class="line">    <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;0644&quot;</span>, </span><br><span class="line">    <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 6, </span><br><span class="line">    <span class="string">&quot;src&quot;</span>: <span class="string">&quot;/root/.ansible/tmp/ansible-tmp-1692524423.9-3528-235526458743393/source&quot;</span>, </span><br><span class="line">    <span class="string">&quot;state&quot;</span>: <span class="string">&quot;file&quot;</span>, </span><br><span class="line">    <span class="string">&quot;uid&quot;</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">192.168.88.162 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">&quot;checksum&quot;</span>: <span class="string">&quot;659f5f85766824a4290371a2abfaeb007cd0af4a&quot;</span>, </span><br><span class="line">    <span class="string">&quot;dest&quot;</span>: <span class="string">&quot;/tmp/a.txt&quot;</span>, </span><br><span class="line">    <span class="string">&quot;gid&quot;</span>: 0, </span><br><span class="line">    <span class="string">&quot;group&quot;</span>: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">    <span class="string">&quot;md5sum&quot;</span>: <span class="string">&quot;fa8f294721ab3fbb37793c68ff2cf09b&quot;</span>, </span><br><span class="line">    <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;0644&quot;</span>, </span><br><span class="line">    <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 6, </span><br><span class="line">    <span class="string">&quot;src&quot;</span>: <span class="string">&quot;/root/.ansible/tmp/ansible-tmp-1692524423.91-3526-156070185170456/source&quot;</span>, </span><br><span class="line">    <span class="string">&quot;state&quot;</span>: <span class="string">&quot;file&quot;</span>, </span><br><span class="line">    <span class="string">&quot;uid&quot;</span>: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="yun模块"><a href="#yun模块" class="headerlink" title="yun模块"></a>yun模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">3).yum模块,批量安装软件(相当于到远端机器执行yum -y install xxx)</span><br><span class="line">格式: <span class="comment"># ansible test -m yum-a &quot;name=要安装的服务名state=installed&quot;</span></span><br><span class="line">例子: 如: ansible test-m yum -a <span class="string">&quot;name=httpd state=installed&quot;</span></span><br><span class="line">使用详解：</span><br><span class="line">name:指定要安装的软件包名称</span><br><span class="line">name的常用参数：即是常用软件包的名称，如：httpd, ....state:指定使用yum的方法进行安装,卸载等操作</span><br><span class="line">state的常用参数如下:</span><br><span class="line">installed,present 安装软件包</span><br><span class="line">removed,absent 移除软件包</span><br><span class="line">latest安装最新软件包</span><br><span class="line">例子：</span><br><span class="line">管理端：</span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m yum -a &quot;name=httpd state=installed&quot; #安装Apache HTTP 服务器</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m command -a &quot;systemctl start httpd&quot;  # 启动</span></span><br></pre></td></tr></table></figure><h3 id="service模块"><a href="#service模块" class="headerlink" title="service模块"></a>service模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">4).service模块,启动,停止,重启,重载服务等</span><br><span class="line">格式: <span class="comment"># ansible test-m service-a &quot;name=服务名state=stopped enabled=yes&quot;</span></span><br><span class="line">例子:如: ansible <span class="built_in">test</span> -m service-a <span class="string">&quot;name=httpd state=stopped enabled=yes&quot;</span></span><br><span class="line"></span><br><span class="line">使用详解：name：定义要启动服务的名称，参数即为各服务名</span><br><span class="line">state:指定服务状态是停止或运行,或重载等,参数如下:</span><br><span class="line">started启动</span><br><span class="line">stopped停止</span><br><span class="line">restarted重启</span><br><span class="line">reloaded重载</span><br><span class="line">enabled:是否让服务开机自启动</span><br><span class="line">例子：</span><br><span class="line">管理端：</span><br><span class="line"><span class="comment"># 启动httpd服务器，并且让其开机自启</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m service -a &quot;name=httpd state=started enabled=yes&quot;</span></span><br></pre></td></tr></table></figure><h3 id="script模块"><a href="#script模块" class="headerlink" title="script模块"></a>script模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">5).script模块,编写脚本和执行脚本(本地编写脚本,本地运行,即可等同于在远程执行)</span><br><span class="line">在本地运行模块,等同于在远程执行,不需要将脚本文件进行推送目标主机执行。</span><br><span class="line">格式： <span class="comment"># ansible test -m script -a&quot;/.../本地编写的脚本.sh&quot;</span></span><br><span class="line">例子:</span><br><span class="line">管理端：</span><br><span class="line">[root@node1 ~]<span class="comment"># cat  yum_wget.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum install wget</span><br><span class="line">[root@node1 ~]<span class="comment"># chmod +x yum_wget.sh</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible tes t-m script -a&quot;/root/yum_wget.sh&quot;</span></span><br></pre></td></tr></table></figure><h3 id="file模块"><a href="#file模块" class="headerlink" title="file模块"></a>file模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">6).file模块，配置模块，远程创建目录,远程创建文件，远程做软硬链接文件</span><br><span class="line">远程创建目录：</span><br><span class="line">ansible <span class="built_in">test</span> -m file -a <span class="string">&quot;path=/tmp/shi state=directory&quot;</span></span><br><span class="line"></span><br><span class="line">远程创建文件：</span><br><span class="line">ansible <span class="built_in">test</span> -m file -a <span class="string">&quot;path=/tmp/shi.txt state=touch mode=555 owner=root group=root&quot;</span></span><br><span class="line"></span><br><span class="line">远程做软连接：</span><br><span class="line">ansible <span class="built_in">test</span> -m file-a <span class="string">&quot;src=/tmp/shi.txt path=/tmp/shi.txt_link state=link&quot;</span></span><br><span class="line"></span><br><span class="line">递归创建或更改目录权限：</span><br><span class="line"><span class="comment"># recurse=yes：递归地应用上述配置，确保所有子目录和文件都具有相同的权限和所有者。</span></span><br><span class="line">ansible <span class="built_in">test</span> -m file -a <span class="string">&quot;path=/tmp/shi state=directory owner=root group=root mode=600 recurse=yes&quot;</span> </span><br><span class="line"></span><br><span class="line">path:指定远程主机目录或文件目录</span><br><span class="line">recurse: 递归授权</span><br><span class="line">state:</span><br><span class="line">directory: 在远端创建目录</span><br><span class="line"><span class="built_in">touch</span>:在远端创建文件</span><br><span class="line"><span class="built_in">link</span>:<span class="built_in">link</span>或hard表示创建链接文件</span><br><span class="line">absent:表示删除文件或目录</span><br><span class="line">mode:设置文件或目录权限</span><br><span class="line">owner:设置文件或目录属主信息</span><br><span class="line">group:设置文件或目录属组信息</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">管理端：</span><br><span class="line"><span class="comment"># 创建shi文件夹</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m file -a &quot;path=/tmp/shi state=directory&quot;   </span></span><br><span class="line">192.168.88.163 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">&quot;gid&quot;</span>: 0, </span><br><span class="line">    <span class="string">&quot;group&quot;</span>: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">    <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;0755&quot;</span>, </span><br><span class="line">    <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/shi&quot;</span>, </span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 6, </span><br><span class="line">    <span class="string">&quot;state&quot;</span>: <span class="string">&quot;directory&quot;</span>, </span><br><span class="line">    <span class="string">&quot;uid&quot;</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">192.168.88.162 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">&quot;gid&quot;</span>: 0, </span><br><span class="line">    <span class="string">&quot;group&quot;</span>: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">    <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;0755&quot;</span>, </span><br><span class="line">    <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;root&quot;</span>, </span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/shi&quot;</span>, </span><br><span class="line">    <span class="string">&quot;size&quot;</span>: 6, </span><br><span class="line">    <span class="string">&quot;state&quot;</span>: <span class="string">&quot;directory&quot;</span>, </span><br><span class="line">    <span class="string">&quot;uid&quot;</span>: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="group模块"><a href="#group模块" class="headerlink" title="group模块"></a>group模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">7).group模块,远程创建组格式: </span><br><span class="line">ansible test-m group-a <span class="string">&quot;name=要创建的组名 gid=888 state=present&quot;</span> <span class="comment">#创建组,指定gid</span></span><br><span class="line"></span><br><span class="line">例子，如：</span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test-m group -a &quot;name=shi_group gid=888 state=present&quot;</span></span><br><span class="line"></span><br><span class="line">name： 指定创建的组名</span><br><span class="line">gid: 指定组的gid</span><br><span class="line">state:表示对组的操作状态，参数如下:</span><br><span class="line">        absent:删除远端的组</span><br><span class="line">        present： 创建远端的组(默认)</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">管理端：</span><br><span class="line"><span class="comment"># 创建一个组</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test-m group-a &quot;name=shi_group gid=888 state=present&quot;</span></span><br><span class="line"></span><br><span class="line">被管理端：</span><br><span class="line"><span class="comment"># 查看是否创建成功</span></span><br><span class="line">[root@node1 ~]<span class="comment"># tail -2 /etc/group </span></span><br><span class="line">apache:x:48:</span><br><span class="line">shi_group:x:888:</span><br></pre></td></tr></table></figure><h3 id="user模块"><a href="#user模块" class="headerlink" title="user模块"></a>user模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">8).user模块,远程创建用户创建用户：不加密码：</span><br><span class="line">ansible <span class="built_in">test</span> -m user -a <span class="string">&quot;name=shi uid=88 group=shi_group shell=/sbin/nologin create_home=no state=present&quot;</span></span><br><span class="line"></span><br><span class="line">删除用户:</span><br><span class="line">ansible test-m user -a <span class="string">&quot;name=shi uid=88 group=shi_group shell=/sbin/nologin create_home=no state=absent&quot;</span></span><br><span class="line"></span><br><span class="line">创建普通用户并设置登录密码:</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;mima&#x27;</span> |openssl passwd -1 -stdin <span class="comment">#给指定的密码内容加密，注意需要加密，用户才能登录$1$PxrQduFH$0sqImb.R6gy80gm8qlUvco</span></span><br><span class="line"></span><br><span class="line">ansible <span class="built_in">test</span> -m user -a <span class="string">&#x27;name=shi3 password=&quot;$1$PxrQduFH$0sqImb.R6gy80gm8qlUvc0&quot; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">name: 指定创建的用户名</span></span><br><span class="line"><span class="string">uid:指定用户的uid</span></span><br><span class="line"><span class="string">gruop:指定用户组名称</span></span><br><span class="line"><span class="string">gruops:指定附加组名称</span></span><br><span class="line"><span class="string">password: 给用户添加密码</span></span><br><span class="line"><span class="string">shell:指定用户登录shell</span></span><br><span class="line"><span class="string">create_home: 是否创建家目录</span></span><br><span class="line"><span class="string">state:表示对用户的操作状态,参数如下:</span></span><br><span class="line"><span class="string">absent: 删除远端的组</span></span><br><span class="line"><span class="string">present: 创建远端的组(默认)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">例子：</span></span><br><span class="line"><span class="string">管理端：</span></span><br><span class="line"><span class="string"># shell=/sbin/nologin是不允许ssh登陆</span></span><br><span class="line"><span class="string">ansible test-m user-a &quot;name=shi uid=88 group=shi-group shell=/sbin/nologin create-home=no state=present&quot; #创建不加密码</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">所有被管理端即可创建用户shi:</span></span><br><span class="line"><span class="string">[root@node1 ~]# id shi</span></span><br><span class="line"><span class="string">uid=88(shi) gid=888(shi_group) groups=888(shi_group)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">创建普通用户并设置登录密码:</span></span><br><span class="line"><span class="string">管理端：</span></span><br><span class="line"><span class="string">[root@node1 ~]# echo &#x27;</span>mima<span class="string">&#x27; |openssl passwd-1-stdin  #给指定的密码内容加密,注意需要加密,用户才能登录</span></span><br><span class="line"><span class="string">$1$PxrQduFH$0sqImb.R6gy80gm8qlUvc0</span></span><br><span class="line"><span class="string">[root@node1 ~]#ansible test -m user -a &#x27;</span>name=shi3 password=<span class="string">&quot;$1$PxrQduFH<span class="variable">$0sqImb</span>.R6gy80gm8qlUvco&quot;</span></span><br></pre></td></tr></table></figure><h3 id="cron模块"><a href="#cron模块" class="headerlink" title="cron模块"></a>cron模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">9).cron模块,远程添加定时任务 (下面:a.sh是远程机器上本地有的脚本)</span><br><span class="line">远程添加定时任务，未设置注释信息：</span><br><span class="line">ansible <span class="built_in">test</span> -m cron -a <span class="string">&quot;minute=00 hour=01 day=* month=* weekday=* job=&quot;</span>/bin/sh /root/a.sh<span class="string">&#x27; state=present&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">远程添加定时任务，并设置注释信息，防止定时任务重复：</span></span><br><span class="line"><span class="string">ansible test-m cron-a &quot;minute=00 hour=01 day=* month=* weekday=* namo=&#x27;</span>注释信息<span class="string">&quot; job=/bin/sh /root/a.sh&#x27; state=present&quot;</span></span><br><span class="line"></span><br><span class="line">远程注释定时任务：</span><br><span class="line">ansible <span class="built_in">test</span> -m cron -a <span class="string">&quot;minute=00 hour=01 day=* month=* weekday=* name=&#x27;cron1&#x27; job=&#x27;/bin/sh /root/a.sh&#x27; state=present disabled=yes&quot;</span></span><br><span class="line"></span><br><span class="line">远程删除定时任务：</span><br><span class="line">ansible <span class="built_in">test</span> -m cron -a <span class="string">&quot;minute=00 hour=01 day=* month=* weekday=* name=&#x27;cron1&#x27; job=&#x27;/bin/sh /root/a.sh&#x27; state=absent&quot;</span> </span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">管理端：</span><br><span class="line"><span class="comment">#远程添加定时任务,未设置注释信息</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ansible test-m cron-a &quot;minute=00 hour=01 day=* month=* weekday=* job=&#x27;/bin/sh /root/a.sh&#x27; state=present&quot;</span></span><br><span class="line"></span><br><span class="line">所有被管理端</span><br><span class="line">[root@localhost ~]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment"># Ansible: None</span></span><br><span class="line">00 01 * ** /bin/sh /root/a.sh</span><br><span class="line"></span><br><span class="line">管理端</span><br><span class="line"><span class="comment">#远程添加定时任务，并设置注释信息，防止定时任务重复</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ansible test-m cron-a &quot;minute=00 hour=01 day=* month=* weekday=* name=&#x27;cron1&#x27; iob=&#x27;/bin/sh /root/a.sh&#x27; state=present&quot;</span></span><br><span class="line"></span><br><span class="line">所有被管理端</span><br><span class="line">[root@localhost ~]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment"># Ansible: cron1</span></span><br><span class="line">00 01 * ** /bin/sh /root/a.sh</span><br><span class="line"></span><br><span class="line">管理端： </span><br><span class="line"><span class="comment">#远程注释定时任务</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ansible test-m cron-a &quot;minute=00 hour=01 day=*month=* weekday=* name=&#x27;cron1&#x27; job=&#x27;/bin/sh /root/a.sh&#x27; state=present disabled=yes&quot;</span></span><br><span class="line"></span><br><span class="line">所有被管理端</span><br><span class="line">[root@localhost ~]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment"># Ansible: cron1</span></span><br><span class="line">00 01 * ** /bin/sh /root/a.sh</span><br></pre></td></tr></table></figure><h3 id="mount模块"><a href="#mount模块" class="headerlink" title="mount模块"></a>mount模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">10).mount模块，远程添加挂载</span><br><span class="line">立刻挂载并写入/etc/fstab中:</span><br><span class="line">ansible <span class="built_in">test</span> -m mount -a <span class="string">&quot;src=192.168.88.161:/data path=/opt fstype=nfs opts=defaults,noatime state=mounted&quot;</span></span><br><span class="line"></span><br><span class="line">立刻卸载并清除/etc/fstab中信息:</span><br><span class="line">ansible test-m mount -a <span class="string">&quot;src=192.168.88.161:/data path=/opt fstype=nfs opts=defaults,noatime state=absent&quot;</span></span><br><span class="line"></span><br><span class="line">src:要被挂载的原目录</span><br><span class="line">path: 要挂载到的本地目录</span><br><span class="line">fstype:要挂载的文件类型</span><br><span class="line">state： 挂载或卸载的状态，常用参数如下：</span><br><span class="line">        present:开机挂载,不会直接挂载设备,仅将配置写入/etc/fstab,不会马上挂载</span><br><span class="line">        mounted:马上直接挂载设备，并将配置写入/etc/fstab</span><br><span class="line">        unmounted:马上直接卸载设备,不会清除/etc/fstab写入的配置</span><br><span class="line">        absent:马上直接卸载设备，会清理/etc/fstab写入的配置</span><br><span class="line">        </span><br><span class="line">例子</span><br><span class="line">管理端：192.168.88.161</span><br><span class="line">[root@node1 ~]<span class="comment"># yum -y install nfs-utils    # 被管理得挂载端也要安装，才能挂载</span></span><br><span class="line">[root@node1 ~]<span class="comment"># cat /etc/exports</span></span><br><span class="line">/data *(rw,no_root_squash)</span><br><span class="line">[root@node1 ~]<span class="comment"># systemctl start nfs  # 启动nfs</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m mount -a &quot;src=192.168.88.161:/data path=/opt fstype=nfs opts=defaults,noatime state=mounted&quot;</span></span><br><span class="line">192.168.88.163 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">&quot;dump&quot;</span>: <span class="string">&quot;0&quot;</span>, </span><br><span class="line">    <span class="string">&quot;fstab&quot;</span>: <span class="string">&quot;/etc/fstab&quot;</span>, </span><br><span class="line">    <span class="string">&quot;fstype&quot;</span>: <span class="string">&quot;nfs&quot;</span>, </span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;/opt&quot;</span>, </span><br><span class="line">    <span class="string">&quot;opts&quot;</span>: <span class="string">&quot;defaults,noatime&quot;</span>, </span><br><span class="line">    <span class="string">&quot;passno&quot;</span>: <span class="string">&quot;0&quot;</span>, </span><br><span class="line">    <span class="string">&quot;src&quot;</span>: <span class="string">&quot;192.168.88.161:/data&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">192.168.88.162 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python&quot;</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">&quot;dump&quot;</span>: <span class="string">&quot;0&quot;</span>, </span><br><span class="line">    <span class="string">&quot;fstab&quot;</span>: <span class="string">&quot;/etc/fstab&quot;</span>, </span><br><span class="line">    <span class="string">&quot;fstype&quot;</span>: <span class="string">&quot;nfs&quot;</span>, </span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;/opt&quot;</span>, </span><br><span class="line">    <span class="string">&quot;opts&quot;</span>: <span class="string">&quot;defaults,noatime&quot;</span>, </span><br><span class="line">    <span class="string">&quot;passno&quot;</span>: <span class="string">&quot;0&quot;</span>, </span><br><span class="line">    <span class="string">&quot;src&quot;</span>: <span class="string">&quot;192.168.88.161:/data&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="get-url模块"><a href="#get-url模块" class="headerlink" title="get_url模块"></a>get_url模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@node2 ~]<span class="comment"># ll /tmp/</span></span><br><span class="line">总用量 24</span><br><span class="line">-rw-r--r-- 1 root root     6 8月  20 17:40 a.txt</span><br><span class="line">-rw-rw-rw- 1 root root 20124 8月  20 20:22 remi-release-6.rpm</span><br><span class="line">11).get_url模块，下载模块</span><br><span class="line">下载模块: get_url:</span><br><span class="line">    url：下载地址</span><br><span class="line">    dest： 下载到本地的路径；</span><br><span class="line">    mode:权限;</span><br><span class="line">    checksum：对资源做校验；</span><br><span class="line">    sha256:</span><br><span class="line">    md5:</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">管理端：192.168.88.161</span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m get_url -a &#x27;url=http://rpms.famillecollet.com/enterprise/remi-release-6.rpm dest=/tmp mode=0666&#x27;</span></span><br><span class="line"></span><br><span class="line">被管理端：192.168.88.162</span><br><span class="line">[root@node2 ~]<span class="comment"># ll /tmp/</span></span><br><span class="line">总用量 24</span><br><span class="line">-rw-r--r-- 1 root root     6 8月  20 17:40 a.txt</span><br><span class="line">-rw-rw-rw- 1 root root 20124 8月  20 20:22 remi-release-6.rpm</span><br></pre></td></tr></table></figure><h3 id="systemd模块"><a href="#systemd模块" class="headerlink" title="systemd模块"></a>systemd模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">12).systemd模块，通过systemd来管理服务启停，类似systemctl start httpd</span><br><span class="line">解释：</span><br><span class="line">    name 服务名称</span><br><span class="line">    state 服务状态</span><br><span class="line">    started 启动</span><br><span class="line">    stopped 停止</span><br><span class="line">    restarted 重启</span><br><span class="line">    reloaded 重载</span><br><span class="line">    enabled 开启自启动| <span class="built_in">yes</span> 启 no 不</span><br><span class="line">    daemon_reload: <span class="built_in">yes</span> 重载systemd整个的配置文件</span><br><span class="line"></span><br><span class="line">例子:用systemd模块启动或停止服务,加入开机自启动或关闭开机自启</span><br><span class="line">管理端：192.168.88.161</span><br><span class="line"> <span class="comment">#先用别的命令,远程批量安装httpd</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ansible test -m command -a &#x27;yum -y install httpd&quot;</span></span><br><span class="line"><span class="comment">#查看,刚安装的服务并未启动</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ansible test -m command -a &#x27;systemctl status httpd&#x27; </span></span><br><span class="line">192.168.88.162 | FAILED | rc=3 &gt;&gt;</span><br><span class="line">● httpd.service - The Apache HTTP Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead) since 日 2023-08-20 20:33:53 CST; 1min 1s ago</span><br><span class="line">     Docs: man:httpd(8)</span><br><span class="line">           man:apachectl(8)</span><br><span class="line">           </span><br><span class="line">192.168.88.163 | FAILED | rc=3 &gt;&gt;</span><br><span class="line">● httpd.service - The Apache HTTP Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:httpd(8)</span><br><span class="line">           man:apachectl(8)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用systemd模块启动服务并加入开机自启</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m systemd -a &#x27;name=httpd state=started enabled=yes&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用systemd模块关闭服务并取消开机自启</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m systemd -a &#x27;name=httpd state=stopped enabled=on&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="selinux模块"><a href="#selinux模块" class="headerlink" title="selinux模块"></a>selinux模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">13).selinux模块,控制selinux开启或关闭</span><br><span class="line">- name: Enable SELinux</span><br><span class="line">selinux:</span><br><span class="line">policy: targeted</span><br><span class="line">state: disabled</span><br><span class="line"></span><br><span class="line">管理端：192.168.88.161</span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m command -a &#x27;getenforce&#x27;  # 先远程查看被管理端得selinux是否开着</span></span><br><span class="line">192.168.88.163 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Enforcing   <span class="comment"># 表示开着</span></span><br><span class="line">192.168.88.162 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Enforcing</span><br><span class="line"></span><br><span class="line">管理端：192.168.88.161</span><br><span class="line"><span class="comment"># 远程关闭被管理端selinux</span></span><br><span class="line">[root@node1 ~]<span class="comment"># ansible test -m selinux -a &#x27;state=disabled&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="playbook"><a href="#playbook" class="headerlink" title="playbook"></a>playbook</h1><h2 id="playbook相关介绍"><a href="#playbook相关介绍" class="headerlink" title="playbook相关介绍"></a>playbook相关介绍</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1).playbook是一个由yml语法编写的文本文件,它由play和task两部分组成。play:主要定义要操作主机或者主机组task:主要定义对主机或主机组具体执行的任务,可以是一个任务,也可以是多个任务(模块)</span><br><span class="line"></span><br><span class="line">2).playbook是由一个或多个模块组成的,使用多个不同的模块,共同完成一件事情。Playbook通过yaml语法识别描述的状态文件,扩展名是yaml.</span><br></pre></td></tr></table></figure><h2 id="yaml三板斧"><a href="#yaml三板斧" class="headerlink" title="yaml三板斧"></a>yaml三板斧</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1).缩进：yaml使用一个固定的缩进风格表示层级结构,每个缩进由两个空格组成,不能使用tab键。</span><br><span class="line">2).冒号：以冒号结尾的除外,其他所有冒号后面所有必须有空格。</span><br><span class="line">3).短横线：表示列表项，使用一个短横线加一个空格作为一个列表项，多个项使用同样的缩进级别作为同一列表。</span><br></pre></td></tr></table></figure><h2 id="ansible-playbook得实战案例"><a href="#ansible-playbook得实战案例" class="headerlink" title="ansible-playbook得实战案例"></a>ansible-playbook得实战案例</h2><h3 id="案例1-用ansible-playbook方式远程批量安装httpd-若修改完配置"><a href="#案例1-用ansible-playbook方式远程批量安装httpd-若修改完配置" class="headerlink" title="案例1: 用ansible-playbook方式远程批量安装httpd-若修改完配置"></a>案例1: 用ansible-playbook方式远程批量安装httpd-若修改完配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">案例1: 用ansible-playbook方式远程批量安装httpd-若修改完配置,重新推送后,配置改了但没重载服务,不生效</span><br><span class="line"></span><br><span class="line">管理端：192.168.88.161</span><br><span class="line">[root@localhost ~]<span class="comment"># ls</span></span><br><span class="line">httpd.conf httpd_install.yaml</span><br><span class="line">[root@localhost ~]<span class="comment"># vim httpd_install.yaml</span></span><br><span class="line"><span class="comment">#这是一个ansible的playbook</span></span><br><span class="line"><span class="comment">#第一步:找到谁,hosts:定义主机清单,ansible的hosts文件里定义的主机清单模块名</span></span><br><span class="line"><span class="comment">#第二步:大概做的任务:安装,配置,启动</span></span><br><span class="line"><span class="comment">#第三步：具体怎么做</span></span><br><span class="line"><span class="comment">#name：描述信息，task里有3个同级别的列表步骤</span></span><br><span class="line"><span class="comment">#yum: 远端安装服务,yum模块安装服务(installed)</span></span><br><span class="line"><span class="comment">#copy： 远端拷贝文件，copy模块传送文件到远端</span></span><br><span class="line"><span class="comment">#service:远端启动服务(started)#remote_user: root 是指定远程主机上使用的用户</span></span><br><span class="line"><span class="comment">#gather_facts: no是默认执行playbook时候,默认会收集目标主机的信息,禁用掉能提高效率</span></span><br><span class="line">- hosts: <span class="built_in">test</span><span class="comment"># 组名</span></span><br><span class="line">  remote_user: root<span class="comment"># 用户</span></span><br><span class="line">  gather_facts: no </span><br><span class="line">  <span class="comment"># tasks（任务）是一个必要的部分。它定义了在执行Playbook时需要完成的具体操作步骤。每个任务由一个或多个模块组成，这些模块用于执行特定的操作。在Playbook中按顺序列出的任务将按照顺序依次执行。</span></span><br><span class="line">  tasks:</span><br><span class="line">    - name: install httpd fuwu </span><br><span class="line">      yum: name=httpd,httpd-tools state=installed</span><br><span class="line">    - name: configure httpd fuwu </span><br><span class="line">      copy: src=/root/httpd.conf dest=/etc/httpd/conf/httpd.conf</span><br><span class="line">      notify: Restart httpd fuwu</span><br><span class="line">    - name: qidong httpd fuwu</span><br><span class="line">      service: name=httpd state=started enabled=<span class="built_in">yes</span></span><br><span class="line">   <span class="comment"># handlers（处理程序）是一种特殊类型的任务，它定义了在Playbook中需要根据需要触发执行的操作</span></span><br><span class="line">   handlers:</span><br><span class="line">    - name: Restart httpd fuwu</span><br><span class="line">      service: name=httpd state=restarted</span><br><span class="line">      </span><br><span class="line">删除服务器    </span><br><span class="line"><span class="comment">#这是一个ansible的playbook</span></span><br><span class="line"><span class="comment">#第一步:找到谁,hosts:定义主机清单,ansible的hosts文件里定义的主机清单模块名</span></span><br><span class="line"><span class="comment">#第二步:大概做的任务:安装,配置,启动</span></span><br><span class="line"><span class="comment">#第三步:具体怎么做#name:描述信息,task里有3个同级别的列表步骤</span></span><br><span class="line"><span class="comment">#yum:远端安装服务，yum模块安装服务远端拷贝文件，copy模块传送文件到远端</span></span><br><span class="line"><span class="comment">#notify:当该项中的配置文件内容有变更时候,会触发下而的handlers的重启操作(根据handler描述信息关联触发)</span></span><br><span class="line"><span class="comment">#handler:当被触发后执行的操作,重启httpd服务#copy:#service：远端启动服务</span></span><br><span class="line"><span class="comment">#remote user:指定远程主机上使用的用户</span></span><br><span class="line"><span class="comment">#gather_facts：默认执行playbook时候，默认会收集目标主机的信息，禁用掉能提高效率</span></span><br><span class="line">- hosts: <span class="built_in">test</span></span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">    - name: remove httpd fufu </span><br><span class="line">      yum: name=httpd,httpd-tools state=absent</span><br><span class="line">    - name: remove apache user</span><br><span class="line">      user: name=apache state=absent</span><br><span class="line">    - name: remove data file</span><br><span class="line">      file: name=/etc/httpd state=absent</span><br></pre></td></tr></table></figure><h3 id="案例2：-在管理端安装nfs服务，在被管理端批量挂载nfs的共享目录"><a href="#案例2：-在管理端安装nfs服务，在被管理端批量挂载nfs的共享目录" class="headerlink" title="案例2： 在管理端安装nfs服务，在被管理端批量挂载nfs的共享目录"></a>案例2： 在管理端安装nfs服务，在被管理端批量挂载nfs的共享目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/ansible/hosts </span></span><br><span class="line">[<span class="built_in">test</span>]<span class="comment">#添加一个组名</span></span><br><span class="line">192.168.88.163<span class="comment">#添加被管理主机的IP</span></span><br><span class="line">192.168.88.162<span class="comment">#添加被管理主机的IP</span></span><br><span class="line">[root@localhost ~]<span class="comment"># yum-y install nfs-utils#管理端和被管理的挂载端都要安装,才能挂载</span></span><br><span class="line">[root@localhost ~]<span class="comment"># vim /etc/exports</span></span><br><span class="line">/data *(rw,no_root_squash)</span><br><span class="line">[root@localhost ~]<span class="comment"># ls /data/</span></span><br><span class="line">a.txt</span><br><span class="line">[root@localhost ~]<span class="comment"># cat /data/a.txt</span></span><br><span class="line">111</span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl start nfs</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat web_mount.yaml</span></span><br><span class="line"><span class="comment">#test: 为/etc/ansible/hosts中的主机列表 #task： 执行的任务</span></span><br><span class="line"><span class="comment">#name：描述信息#mount: mount模块</span></span><br><span class="line"><span class="comment">#state=mounted:马上直接挂载设备，并将配置写入/etc/fstab</span></span><br><span class="line"><span class="comment">#remote_user: root是指定远程主机上使用的用户</span></span><br><span class="line"><span class="comment">#gather_facts: no是默认执行playbook时候,默认会收集目标主机的信息,禁用掉能提高效率</span></span><br><span class="line">- hosts: <span class="built_in">test</span></span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">   - name: Mount nfs server share data </span><br><span class="line">     mount: src=192.168.171.128:/data path=/data fstype=nfs opts=defaults state=mounted</span><br><span class="line"><span class="comment">#若将state=absent,则立刻卸载并清除/etc/fstab中信息</span></span><br></pre></td></tr></table></figure><h3 id="案例3：远程批量安装源码nginx服务"><a href="#案例3：远程批量安装源码nginx服务" class="headerlink" title="案例3：远程批量安装源码nginx服务"></a>案例3：远程批量安装源码nginx服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#test:为/etc/ansible/hosts中的主机列表 #task:执行的任务</span></span><br><span class="line"><span class="comment">#name：描述信息  #yum: yum模块，安装服务的</span></span><br><span class="line"><span class="comment">#copy: copy模块,远程传递文件的#file： file模块，远程创建目录的</span></span><br><span class="line"><span class="comment">#service: service模块,远程管理服务的</span></span><br><span class="line"><span class="comment">#remote_user: root是指定远程主机上使用的用户</span></span><br><span class="line"><span class="comment">#gather_facts: no是默认执行playbook时候,默认会收集目标主机的信息,禁用掉能提高效率</span></span><br><span class="line"><span class="comment">#使用前先将相关软件包: nginx压缩包和jdk压缩包上传到/root/ansible-playbook-deploy-nginx/目录中</span></span><br><span class="line">- hosts: <span class="built_in">test</span></span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  vars:</span><br><span class="line">    src_nginx: /root/nginx-1.13.7.tar.gz</span><br><span class="line">    nginx_jieya_dir: /usr/local</span><br><span class="line">    nginx_install_dir: /usr/local/nginx</span><br><span class="line">    nginx_jieyahou_name: nginx-1.13.7</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line"><span class="comment">#上传nginx压缩安装包到: /root/ansible-playbook-deploy-nginx/,提前操作</span></span><br><span class="line"><span class="comment">#安装编译工具和相关依赖</span></span><br><span class="line"><span class="comment">#- name: Install gcc gcc-c++ and yilai</span></span><br><span class="line"><span class="comment"># yum: name=&#123;&#123; item &#125;&#125; state=installed</span></span><br><span class="line"><span class="comment"># with_items:</span></span><br><span class="line"><span class="comment">#   - gcc</span></span><br><span class="line"><span class="comment">#   - gcc-c++</span></span><br><span class="line"><span class="comment">#   - openssl-devel</span></span><br><span class="line"><span class="comment">#   - openssl</span></span><br><span class="line"><span class="comment">#   - zlib</span></span><br><span class="line"><span class="comment">#   - zlib-devel</span></span><br><span class="line"><span class="comment">#   - pcre</span></span><br><span class="line"><span class="comment">#   - pcre-devel</span></span><br><span class="line"><span class="comment">#注意：下面yum安装依赖方式也可用上面方式安装</span></span><br><span class="line"><span class="comment">#安装编译工具和相关依赖</span></span><br><span class="line">    - name: Install gcc gcc-c++ and yilai</span><br><span class="line">      yum:</span><br><span class="line">        name: <span class="string">&quot;gcc,gcc-c++,openssl-devel,openssl,zlib,zlib-devel,pcre,pcre-devel,vim,wget&quot;</span></span><br><span class="line">        state: installed</span><br><span class="line"><span class="comment">#解压nginx压缩包</span></span><br><span class="line">    - name: Unarchive nginx package</span><br><span class="line">      unarchive:</span><br><span class="line">        src: <span class="string">&quot;&#123;&#123; src_nginx &#125;&#125;&quot;</span></span><br><span class="line">        dest: <span class="string">&quot;&#123;&#123; nginx_jieya_dir &#125;&#125;&quot;</span></span><br><span class="line"><span class="comment"># 配置编译nginx</span></span><br><span class="line">    - name: Config and bianyi nginx</span><br><span class="line">      shell: |</span><br><span class="line">        useradd -s /sbin/nologin nginx</span><br><span class="line">        <span class="built_in">cd</span> &#123;&#123; nginx_jieya_dir &#125;&#125;/&#123;&#123; nginx_jieyahou_name &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#./configure 是运行 Nginx 的配置脚本。</span></span><br><span class="line"><span class="comment">#--user=nginx 指定运行 Nginx 进程的用户为 nginx 用户。</span></span><br><span class="line"><span class="comment">#--group=nginx 指定运行 Nginx 进程的用户组为 nginx 组。</span></span><br><span class="line"><span class="comment">#--prefix=&#123;&#123; nginx_install_dir &#125;&#125; 指定安装 Nginx 的目录为 &#123;&#123; nginx_install_dir &#125;&#125;。</span></span><br><span class="line"><span class="comment">#--with-http_stub_status_module 启用 Nginx 的 HTTP status 模块，用于获取服务器状态信息。</span></span><br><span class="line"><span class="comment">#--with-http_ssl_module 启用 Nginx 的 SSL 模块，支持通过 HTTPS 访问。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#make 命令用于编译 Nginx 源代码。</span></span><br><span class="line"><span class="comment">#make install 命令用于将编译好的 Nginx 可执行文件和相关文件安装到指定目录中，即 &#123;&#123; nginx_install_dir &#125;&#125;。</span></span><br><span class="line">        ./configure --user=nginx --group=nginx --prefix=&#123;&#123; nginx_install_dir &#125;&#125; --with-http_stub_status_module --with-http_ssl_module</span><br><span class="line">        make</span><br><span class="line">        make install</span><br><span class="line"></span><br><span class="line">    - name: Start nginx</span><br><span class="line">      shell: /usr/local/nginx/sbin/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意上面解压也可用另一种方式: shell命令</span></span><br><span class="line"><span class="comment"># - name: Unarchive tomcat package</span></span><br><span class="line"><span class="comment">#   copy: src=/root/ansible-playbook-deploy-tomcat/apache-tomcat-8.0.32.tar.gz dest=/tmp/</span></span><br><span class="line"><span class="comment"># - name: Unarchive tomcat</span></span><br><span class="line"><span class="comment">#   shell: cd /tmp &amp;&amp; tar -zxf apache-tomcat-8.0.32.tar.gzxxxxxxxxxx </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">没注释的</span><br><span class="line">- hosts: <span class="built_in">test</span></span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  vars:</span><br><span class="line">    src_nginx: /root/nginx-1.13.7.tar.gz</span><br><span class="line">    nginx_jieya_dir: /usr/local</span><br><span class="line">    nginx_install_dir: /usr/local/nginx</span><br><span class="line">    nginx_jieyahou_name: nginx-1.13.7</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: Install gcc gcc-c++ and yilai</span><br><span class="line">      yum:</span><br><span class="line">        name: <span class="string">&quot;gcc,gcc-c++,openssl-devel,openssl,zlib,zlib-devel,pcre,pcre-devel,vim,wget&quot;</span></span><br><span class="line">        state: installed</span><br><span class="line"></span><br><span class="line">    - name: Unarchive nginx package</span><br><span class="line">      unarchive:</span><br><span class="line">        src: <span class="string">&quot;&#123;&#123; src_nginx &#125;&#125;&quot;</span></span><br><span class="line">        dest: <span class="string">&quot;&#123;&#123; nginx_jieya_dir &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">    - name: Config and bianyi nginx</span><br><span class="line">      shell: |</span><br><span class="line">        useradd -s /sbin/nologin nginx</span><br><span class="line">        <span class="built_in">cd</span> &#123;&#123; nginx_jieya_dir &#125;&#125;/&#123;&#123; nginx_jieyahou_name &#125;&#125;</span><br><span class="line">        ./configure --user=nginx --group=nginx --prefix=&#123;&#123; nginx_install_dir &#125;&#125; --with-http_stub_status_module --with-http_ssl_module</span><br><span class="line">        make</span><br><span class="line">        make install</span><br><span class="line"></span><br><span class="line">    - name: Start nginx</span><br><span class="line">      shell: /usr/local/nginx/sbin/nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="案例4：远程批量安装二进制tomcat服务"><a href="#案例4：远程批量安装二进制tomcat服务" class="headerlink" title="案例4：远程批量安装二进制tomcat服务"></a>案例4：远程批量安装二进制tomcat服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#test: 为/etc/ansible/hosts中的主机列表 #task:执行的任务</span></span><br><span class="line"><span class="comment">#name：描述信息#yum: yum模块，安装服务的</span></span><br><span class="line"><span class="comment">#copy: copy模块,远程传递文件的#file： file模块，远程创建目录的</span></span><br><span class="line"><span class="comment">#service: service模块,远程管理服务的</span></span><br><span class="line"><span class="comment">#remote_user: root是指定远程主机上使用的用户</span></span><br><span class="line"><span class="comment">#gather_facts: no是默认执行playbook时候,默认会收集目标主机的信息,禁用掉能提高效率</span></span><br><span class="line"><span class="comment">#使用前先将相关软件包: tomcat压缩包和jdk压缩包上传到/root/ansible-playbook-deploy-tomcat/目录中</span></span><br><span class="line">- hosts: <span class="built_in">test</span></span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  vars:</span><br><span class="line">    src_jdk: /root/ansible-playbook-deploy-tomcat/jdk-8u65-linux-x64.gz</span><br><span class="line">    jdk_install_dir: /usr/local</span><br><span class="line">    jdk_jieyahou_name: jdk1.8.0_65</span><br><span class="line">    src_tomcat: /root/ansible-playbook-deploy-tomcat/apache-tomcat-8.0.32.tar.gz</span><br><span class="line">    tomcat_install_dir: /usr/local</span><br><span class="line">    tomcat_jieyahou_name: apache-tomcat-8.0.32</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">  <span class="comment">#上传jdk压缩安装包到: /root/ansible-playbook-deploy-tomcat/,提前操作</span></span><br><span class="line">  <span class="comment">#解压jdk压缩包</span></span><br><span class="line">    - name: Unarchive JDK package</span><br><span class="line">      unarchive:</span><br><span class="line">        src: <span class="string">&quot;&#123;&#123; src_jdk &#125;&#125;&quot;</span></span><br><span class="line">        dest: <span class="string">&quot;&#123;&#123; jdk_install_dir &#125;&#125;&quot;</span></span><br><span class="line">   <span class="comment">#配置jdk环境变量</span></span><br><span class="line">   - name: <span class="built_in">set</span> jdk global <span class="built_in">env</span></span><br><span class="line">     shell: <span class="built_in">echo</span> <span class="string">&quot;export JAVA_HOME=/usr/local/&#123;&#123; jdk_jieyahou_name &#125;&#125;&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp;              <span class="built_in">echo</span> <span class="string">&quot;&quot;</span><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span><span class="string">&quot;&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; </span><br><span class="line">           <span class="built_in">echo</span> <span class="string">&quot;export CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp;</span><br><span class="line">           <span class="built_in">source</span> ~/.bashrc </span><br><span class="line">    <span class="comment">#有yum源时jdk也可采用下面方式安装</span></span><br><span class="line">    <span class="comment">#安装jdk环境</span></span><br><span class="line">    <span class="comment">#- name: Install jdk1.8yum: name=java-1.8.0-openjdk state=installed</span></span><br><span class="line">    <span class="comment">#上传tomcat软件包到/root/ansible-playbook-deploy-tomcat/目录,提前操作</span></span><br><span class="line">    <span class="comment">#解压tomcat软件包  </span></span><br><span class="line">    - name: Unarchive tomcat package </span><br><span class="line">      unarchive: </span><br><span class="line">       src: <span class="string">&quot;&#123;&#123; src_tomcat &#125;&#125;&quot;</span> </span><br><span class="line">       dest: <span class="string">&quot;&#123;&#123; tomcat_install_dir &#125;&#125;&quot;</span></span><br><span class="line">    <span class="comment">#start tomcat,注意: tomcat首次启动需要用 nohup ./startup.sh &amp; 或 nohup ./catalina.sh &amp; 启动,如果直接使用/.../.../tomcat.../bin/startup.sh则启动不了</span></span><br><span class="line">    - name: Start tomcat</span><br><span class="line">      shell: <span class="built_in">cd</span> <span class="string">&quot;&#123;&#123; tomcat_install_dir &#125;&#125;&quot;</span> &amp;&amp; <span class="built_in">cd</span> <span class="string">&quot;&#123;&#123; tomcat_jieyahou_name &#125;&#125;&quot;</span>/bin &amp;&amp; <span class="built_in">nohup</span> ./startup.sh &amp;</span><br><span class="line">    <span class="comment">#注意上面解压也可用另一种方式: shell命令</span></span><br><span class="line">    <span class="comment">#- name: Unarchive tomcat package</span></span><br><span class="line">    <span class="comment"># copy: src=/root/ansible-playbook-deploy-tomcat/apache-tomcat-8.0.32.tar.gz dest=/tmp/</span></span><br><span class="line">    <span class="comment">#- name: Unarchive tomcat</span></span><br><span class="line">    <span class="comment"># shell: cd /tmp &amp;&amp; tar-zxf apache-tomcat-8.0.32.tar.gz</span></span><br></pre></td></tr></table></figure><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章湫日所著，如有错误请联系作者更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ansible常用命令模块&quot;&gt;&lt;a href=&quot;#ansible常用命令模块&quot; class=&quot;headerlink&quot; title=&quot;ansible常用命令模块&quot;&gt;&lt;/a&gt;ansible常用命令模块&lt;/h2&gt;&lt;figure class=&quot;highlight plai</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Ansible" scheme="http://example.com/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Azkaban3.50.0安装</title>
    <link href="http://example.com/2023/08/22/Linux-Azkaban%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/08/22/Linux-Azkaban%E5%AE%89%E8%A3%85/</id>
    <published>2023-08-22T02:17:51.000Z</published>
    <updated>2023-08-23T09:12:26.112Z</updated>
    
    <content type="html"><![CDATA[<ul><li>jdk、MySQL环境</li><li>Azkaban3.50.0安装包</li></ul><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>上传并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf azkaban-3.50.0.tar.gz -C /export/servers/</span><br></pre></td></tr></table></figure><h3 id="重命名Azkaban"><a href="#重命名Azkaban" class="headerlink" title="重命名Azkaban"></a>重命名Azkaban</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv azkaban-3.50.0/ azkaban3.50</span><br></pre></td></tr></table></figure><h3 id="Azkaban源文件编译"><a href="#Azkaban源文件编译" class="headerlink" title="Azkaban源文件编译"></a>Azkaban源文件编译</h3><div class="note danger flat"><p>过程可能需要很长时间，建议使用第③种方法</p></div><p>①Azkaban最新源文件地址为<a href="https://github.com/azkaban/azkaban%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BDZIP%E5%8E%8B%E7%BC%A9%E5%8C%85%E3%80%82">https://github.com/azkaban/azkaban，可以直接下载ZIP压缩包。</a></p><p>②使用Git工具拉取如下</p><p>先安装git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure><p>进入azkaban3.50里运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew build -x test</span><br></pre></td></tr></table></figure><p>③<a href="https://wwi.lanzoup.com/icpmO163se0d">点击蓝奏云下载</a> </p><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><p>启动MySQL</p><div class="note danger flat"><p>没有MySQL可以参考Hive安装文档里的MySQL安装</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></table></figure><p>创建Azkaban的数据库以及用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database azkaban;</span><br></pre></td></tr></table></figure><p>在默认的配置下，MySQL会根据配置文件限制接收数据包的大小</p><p><code>vi /etc/my.cnf</code>增加属性设置大小</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max_allowed_packet=1024M</span><br></pre></td></tr></table></figure><div class="note danger flat"><p>完成以上配置后必须使用以下指令重启MySQL</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /sbin/service mysqld restart</span><br></pre></td></tr></table></figure><p>创建文件夹将下载的编译文件上传到该文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p azkaban-db/build/distrbutions</span><br></pre></td></tr></table></figure><p>将azkaban-db-0.1.0-SNAPSHOT.tar.gz进行解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf azkaban-db-0.1.0-SNAPSHOT.tar.gz</span><br></pre></td></tr></table></figure><p>将刚刚解压的文件里的create-all-sql-0.1.0-SNAPSHOT.sql传入MySQL里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></table></figure><p>输入绝对路径，可以使用<code>pwd</code>获取路径并且复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use azkaban;</span><br><span class="line"></span><br><span class="line">source /export/servers/azkaban3.50/azkaban-db/build/distrbutions/azkaban-db-0.1.0-SNAPSHOT/create-all-sql-0.1.0-SNAPSHOT.sql</span><br></pre></td></tr></table></figure><p>查看是否导入成功——退出MySQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br><span class="line"></span><br><span class="line">quit;</span><br></pre></td></tr></table></figure><p>继续解压azkaban-web-server-0.1.0-SNAPSHOT.tar.gz到azkaban的根目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf azkaban-web-server-0.1.0-SNAPSHOT.tar.gz -C /export/servers/azkaban3.50/</span><br></pre></td></tr></table></figure><p>继续解压azkaban-solo-server-0.1.0-SNAPSHOT.tar.gz到当前目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf azkaban-solo-server-0.1.0-SNAPSHOT.tar.gz</span><br></pre></td></tr></table></figure><p>进入azkaban-solo-server-0.1.0-SNAPSHOT将里面conf、plugins复制到上面解压出来的azkaban-web-server-0.1.0-SNAPSHOT文件里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r conf /export/servers/azkaban3.50/azkaban-web-server-0.1.0-SNAPSHOT/</span><br><span class="line">scp -r plugins /export/servers/azkaban3.50/azkaban-web-server-0.1.0-SNAPSHOT/</span><br></pre></td></tr></table></figure><p>进入到该目录下创建一个extlib文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /export/servers/azkaban3.50/azkaban-web-server-0.1.0-SNAPSHOT/</span><br><span class="line">mkdir extlib</span><br></pre></td></tr></table></figure><h3 id="创建SSL"><a href="#创建SSL" class="headerlink" title="创建SSL"></a>创建SSL</h3><p>Azkaban使用SSL套接字连接器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -keystore keystore -alias jetty -genkey -keyalg RSA</span><br></pre></td></tr></table></figure><p>密钥库口令输入123456，接下来的问题可自定义或不填；</p><p>然后在is correct？(是否正确)的地方输入Y(大写)，之后回车就ok</p><h3 id="Azkaban-Web配置"><a href="#Azkaban-Web配置" class="headerlink" title="Azkaban Web配置"></a>Azkaban Web配置</h3><p>在azkaban-web-server-0.1.0-SNAPSHOT目录下打开conf目录下配置以下文件</p><h4 id="vi-azkaban-properties"><a href="#vi-azkaban-properties" class="headerlink" title="vi azkaban.properties"></a>vi azkaban.properties</h4><p>将</p><p>default.timezone.id&#x3D;America&#x2F;Los_Angeles</p><p>替换成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将默认时区改为 亚洲/上海</span></span><br><span class="line">default.timezone.id=Asia/Shanghai</span><br></pre></td></tr></table></figure><hr><p>将</p><p>database.type&#x3D;h2<br>h2.path&#x3D;.&#x2F;h2<br>h2.create.tables&#x3D;true</p><p>替换成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对数据库类型和配置进行修改编辑</span></span><br><span class="line">database.type=mysql</span><br><span class="line">mysql.port=3306</span><br><span class="line">mysql.host=localhost</span><br><span class="line">mysql.database=azkaban</span><br><span class="line">mysql.user=root</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">自己的MySQL密码</span></span><br><span class="line">mysql.password=123456</span><br><span class="line">mysql.numconnections=100</span><br></pre></td></tr></table></figure><hr><p>将</p><p>jetty.use.ssl&#x3D;false<br>jetty.maxThreads&#x3D;25<br>jetty.port&#x3D;8081</p><p>替换成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对jetty服务配置进行修改编辑</span></span><br><span class="line">jetty.use.ssl=true</span><br><span class="line">jetty.maxThreads=25</span><br><span class="line">jetty.port=8081</span><br><span class="line">jetty.ssl.port=8443</span><br><span class="line">jetty.keystore=keystore</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">自己设置的ssl密码</span></span><br><span class="line">jetty.password=123456</span><br><span class="line">jetty.keypassword=123456</span><br><span class="line">jetty.truststore=keystore</span><br><span class="line">jetty.trustpassword=123456</span><br></pre></td></tr></table></figure><h4 id="vi-azkaban-users-xml"><a href="#vi-azkaban-users-xml" class="headerlink" title="vi azkaban-users.xml"></a>vi azkaban-users.xml</h4><p>往中间空白处增加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;user password=&quot;admin&quot; roles=&quot;metrics,admin&quot; username=&quot;admin&quot;/&gt;</span><br></pre></td></tr></table></figure><h4 id="vi-log4j-properties"><a href="#vi-log4j-properties" class="headerlink" title="vi log4j.properties"></a>vi log4j.properties</h4><p>log4j.appender.server.File&#x3D;logs&#x2F;azkaban-webserver.log</p><div class="note danger flat"><p>这是服务启动日志文件的路径，可修改可不修改</p></div><h3 id="Azkaban-Executor配置"><a href="#Azkaban-Executor配置" class="headerlink" title="Azkaban Executor配置"></a>Azkaban Executor配置</h3><p>回到先前编译好的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /export/servers/azkaban3.50/azkaban-db/build/distrbutions/</span><br></pre></td></tr></table></figure><p>将azkaban-exec-server-0.1.0-SNAPSHOT.tar.gz解压到azkaban的根目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf azkaban-exec-server-0.1.0-SNAPSHOT.tar.gz -C /export/servers/azkaban3.50/</span><br></pre></td></tr></table></figure><p>进入该目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /export/servers/azkaban3.50/azkaban-exec-server-0.1.0-SNAPSHOT/</span><br></pre></td></tr></table></figure><p>将azkaban-web-server-0.1.0-SNAPSHOT里的三个conf、plugins、extlib文件复制过来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp -r ../azkaban-web-server-0.1.0-SNAPSHOT/conf /export/servers/azkaban3.50/azkaban-exec-server-0.1.0-SNAPSHOT/</span><br><span class="line">scp -r ../azkaban-web-server-0.1.0-SNAPSHOT/plugins /export/servers/azkaban3.50/azkaban-exec-server-0.1.0-SNAPSHOT/</span><br><span class="line">scp -r ../azkaban-web-server-0.1.0-SNAPSHOT/extlib /export/servers/azkaban3.50/azkaban-exec-server-0.1.0-SNAPSHOT/</span><br></pre></td></tr></table></figure><p>进入当前目录下的conf修改azkaban.properties</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi conf/azkaban.properties</span><br></pre></td></tr></table></figure><p>-# Azkanban Executor settings</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置最大线程数</span></span><br><span class="line">executor.maxThreads=50</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置流动线程数</span></span><br><span class="line">executor.flow.threads=30</span><br></pre></td></tr></table></figure><p>-# 设置Executor端口<br>executor.port&#x3D;12321</p><h3 id="Azkaban的启动测试"><a href="#Azkaban的启动测试" class="headerlink" title="Azkaban的启动测试"></a>Azkaban的启动测试</h3><h4 id="启动Azkaban-Executor服务"><a href="#启动Azkaban-Executor服务" class="headerlink" title="启动Azkaban Executor服务"></a>启动Azkaban Executor服务</h4><p>在azkaban-<code>exec</code>-server-0.1.0-SNAPSHOT目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/start-exec.sh</span><br></pre></td></tr></table></figure><p>启动后终端没有任何响应，<code>ls</code>查看是否产生日志文件</p><p>分别是executorServerLog__*.out 和logs</p><p>关闭Azkaban Executor服务</p><p>在azkaban-<code>exec</code>-server-0.1.0-SNAPSHOT目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/shutdown-exec.sh</span><br></pre></td></tr></table></figure><p>查看logs下的文件，倒数第二句是</p><p>[Azkaban] Started Executor Server on hadoop:12321</p><p>代表成功</p><h4 id="启动Azkaban-Web服务"><a href="#启动Azkaban-Web服务" class="headerlink" title="启动Azkaban Web服务"></a>启动Azkaban Web服务</h4><p>在azkaban-<code>web</code>-server-0.1.0-SNAPSHOT目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/start-web.sh</span><br></pre></td></tr></table></figure><p>启动后终端没有任何响应，<code>ls</code>查看是否产生日志文件</p><p>分别是webServerLog__*.out 和logs</p><p>关闭Azkaban Executor服务</p><p>在azkaban-<code>web</code>-server-0.1.0-SNAPSHOT目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/shutdown-web.sh</span><br></pre></td></tr></table></figure><p>查看logs下的文件，最后一句是</p><p>[Azkaban] Server started</p><p>代表成功</p><h3 id="访问Azkaban-UI"><a href="#访问Azkaban-UI" class="headerlink" title="访问Azkaban UI"></a>访问Azkaban UI</h3><p><code>https://ip:8443</code></p><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;jdk、MySQL环境&lt;/li&gt;
&lt;li&gt;Azkaban3.50.0安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;&lt;/a&gt;安装环境&lt;/h3&gt;&lt;p&gt;上传并解</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/categories/Hadoop/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/tags/Hadoop/"/>
    
    <category term="Azkaban" scheme="http://example.com/tags/Azkaban/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Flume1.8.0安装</title>
    <link href="http://example.com/2023/08/21/Linux-Flume%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/08/21/Linux-Flume%E5%AE%89%E8%A3%85/</id>
    <published>2023-08-21T12:51:13.000Z</published>
    <updated>2023-08-22T09:58:32.048Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Java1.6以上版本</li><li>Flume1.8.0安装包</li></ul><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>上传并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-flume-1.8.0-bin.tar.gz -C /export/servers/</span><br></pre></td></tr></table></figure><h3 id="重命名Flume"><a href="#重命名Flume" class="headerlink" title="重命名Flume"></a>重命名Flume</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-flume-1.8.0-bin/ flume1.8</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>①flume-env.sh 环境变量配置</p><p>进入 <strong>conf</strong> 目录下打开flume.env.sh，把JAVA_HOME的注释去掉，并修改成你的 jdk 路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi flume-env.sh</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/export/servers/jdk1.8</span><br></pre></td></tr></table></figure><p>没有flume.env.sh的复制文件</p><p><code>cp flume-env.sh.template flume-env.sh</code></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>已安装hadoop、hive、zookeeper</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile  #找不到命令解决方法：export PATH=/usr/sbin</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/export/servers/jdk</span><br><span class="line">export HADOOP_HOME=/export/servers/hadoop</span><br><span class="line">export HIVE_HOME=/export/servers/hive1.2</span><br><span class="line">export ZK_HOME=/export/servers/zookeeper3.4</span><br><span class="line">export FLUME_HOME=/export/servers/flume1.8</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin:$ZK_HOME/bin:$FLUME_HOME/bin</span><br></pre></td></tr></table></figure><p><font color='red'>记得<code>. /etc/porfile</code>刷新配置文件</font></p><p>使用version检测是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flume-ng version</span><br></pre></td></tr></table></figure><h3 id="Flume入门使用"><a href="#Flume入门使用" class="headerlink" title="Flume入门使用"></a>Flume入门使用</h3><h4 id="配置Flume采集方案"><a href="#配置Flume采集方案" class="headerlink" title="配置Flume采集方案"></a>配置Flume采集方案</h4><p>在flume的conf目录下创建一个<code>vi netcat-logger.conf</code>文件</p><p><code>vi netcat-logger.conf</code></p><p><font color="red">localhost是你的主机名，localhost同样可以使用，如果报错可以尝试一下修改localhost</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">示例配置方案：单节点Flume配置</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">定义Agent中各个组件名称</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">其中该Agent名为a1，<span class="built_in">source</span>名为r1，sinks名为k1，channels名为c1</span></span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">描述并配置sources组件（数据源类型、采集数据源应用地址）</span></span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">描述并配置sinks组件（采集后数据流动的类型）</span></span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">描述并配置channels（缓存类型、内存缓存大小和事务缓存大小）</span></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将<span class="built_in">source</span>和sink通过一个channel连接绑定</span></span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><h4 id="使用指定采集方案启动Flume"><a href="#使用指定采集方案启动Flume" class="headerlink" title="使用指定采集方案启动Flume"></a>使用指定采集方案启动Flume</h4><p>返回flume1.8目录下运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flume-ng agent --conf conf/ --conf-file conf/netcat-logger.conf --name a1 -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><p>出现127..0.0.1:4444代表成功</p><h4 id="安装Telnet"><a href="#安装Telnet" class="headerlink" title="安装Telnet"></a>安装Telnet</h4><div class="note danger disabled"><p>已安装可跳过</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install telnet</span><br></pre></td></tr></table></figure><h4 id="Flume采集数据测试"><a href="#Flume采集数据测试" class="headerlink" title="Flume采集数据测试"></a>Flume采集数据测试</h4><p>打开新的会话窗口输入以下指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.219.199 44444</span><br></pre></td></tr></table></figure><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>①vi flume-conf.properties<br>-bash: vi: 未找到命令</p><p>原因：</p><p><strong>环境变量</strong>PATH被修改了，是刚刚操作的修改影响了PATH</p><p>解决办法</p><p>1、执行以下命令：<strong>当前生效</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/bin:/usr/bin:PATH</span><br></pre></td></tr></table></figure><p>该方法只能暂时修改当前的path环境，如果退出后重连会继续失效.</p><p><strong>成功！</strong></p><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;Java1.6以上版本&lt;/li&gt;
&lt;li&gt;Flume1.8.0安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;&lt;/a&gt;安装环境&lt;/h3&gt;&lt;p&gt;上传并解压&lt;/</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/categories/Hadoop/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/tags/Hadoop/"/>
    
    <category term="Flume" scheme="http://example.com/tags/Flume/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Zookeeper3.4.10安装</title>
    <link href="http://example.com/2023/08/21/Linux-Zookeeper%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/08/21/Linux-Zookeeper%E5%AE%89%E8%A3%85/</id>
    <published>2023-08-21T07:09:46.000Z</published>
    <updated>2023-08-22T06:30:55.137Z</updated>
    
    <content type="html"><![CDATA[<ul><li>java环境</li><li>Zookeeper3.4.10安装包</li></ul><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>上传并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf zookeeper-3.4.10.tar.gz -C /export/servers/</span><br></pre></td></tr></table></figure><h3 id="重命名zookeeper"><a href="#重命名zookeeper" class="headerlink" title="重命名zookeeper"></a>重命名zookeeper</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv zookeeper-3.4.10/ zookeeper3.4</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>复制Zookeeper文件夹中conf目录下配置文件zoo_sample.cfg为zoo.cfg</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd zookeeper3.4/conf</span><br><span class="line"></span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure><p>修改zoo.cfg，分别设置dataDir目录，配置服务器编号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置数据文件目录+数据持久化路径</span></span><br><span class="line">dataDir=/export/data/zookeeper/zkdata</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">cluster</span></span><br><span class="line">server.1=hadoop:2888:3888</span><br><span class="line">server.2=hadoop:2888:3888</span><br><span class="line">server.3=hadoop:2888:3888</span><br></pre></td></tr></table></figure><p>创建myid文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /export/data/zookeeper/zkdata</span><br></pre></td></tr></table></figure><p>在zkdata文件夹下创建myid文件，该文件里面的内容就是服务编号，第一个服务器编号1，第二个服务器编号2，第三个服务器编号3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /export/data/zookeeper/zkdata</span><br><span class="line">echo 1 &gt; myid</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>已安装hadoop、hive</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile  #找不到命令解决方法：export PATH=/usr/sbin</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/export/servers/jdk</span><br><span class="line">export HADOOP_HOME=/export/servers/hadoop</span><br><span class="line">export HIVE_HOME=/export/servers/hive1.2</span><br><span class="line">export ZK_HOME=/export/servers/zookeeper3.4</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin:$ZK_HOME/bin</span><br></pre></td></tr></table></figure><p><font color='red'>记得<code>. /etc/porfile</code>刷新配置文件</font></p><h3 id="分发zookeeper相关文件至其他服务器"><a href="#分发zookeeper相关文件至其他服务器" class="headerlink" title="分发zookeeper相关文件至其他服务器"></a>分发zookeeper相关文件至其他服务器</h3><p>将zookeeper安装目录分发至别的服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /export/servers/zookeeper3.4/ hadoop02:/export/servers/</span><br><span class="line">scp -r /export/servers/zookeeper3.4/ hadoop03:/export/servers/</span><br></pre></td></tr></table></figure><p>将myid文件分发至别的服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /export/data/zkdata hadoop02:/export/data/</span><br><span class="line">scp -r /export/data/zkdata hadoop03:/export/data/</span><br></pre></td></tr></table></figure><p>将profile文件也分发至别的服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/profile hadoop02:/etc/profile</span><br><span class="line">scp /etc/profile hadoop03:/etc/profile</span><br></pre></td></tr></table></figure><p>环境变量生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="Zookeeper的启动和关闭"><a href="#Zookeeper的启动和关闭" class="headerlink" title="Zookeeper的启动和关闭"></a>Zookeeper的启动和关闭</h3><p>启动zookeeper服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><p>执行相关命令查看该节点Zookeeper的角色</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh status</span><br></pre></td></tr></table></figure><p>关闭zookeeper服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh stop</span><br></pre></td></tr></table></figure><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;java环境&lt;/li&gt;
&lt;li&gt;Zookeeper3.4.10安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;&lt;/a&gt;安装环境&lt;/h3&gt;&lt;p&gt;上传并解压&lt;/</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/categories/Hadoop/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/tags/Hadoop/"/>
    
    <category term="Zookeeper" scheme="http://example.com/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>Linux—Hive1.2.1安装</title>
    <link href="http://example.com/2023/08/21/Linux%E2%80%94hive%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/08/21/Linux%E2%80%94hive%E5%AE%89%E8%A3%85/</id>
    <published>2023-08-21T01:36:23.000Z</published>
    <updated>2023-08-22T10:14:13.485Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Linux系统</p></li><li><p>Hadoop环境(2.7.4)</p></li><li><p>hive1.2.1安装包</p></li><li><p><strong>MySQL两个安装包（第二个需要）</strong></p><p>①<code>mysql57-community-release-el7-10.noarch.rpm</code></p><p>②<code>mysql-connector-java-5.1.47.tar.gz</code></p></li></ul><h3 id="简单安装Hive"><a href="#简单安装Hive" class="headerlink" title="简单安装Hive"></a>简单安装Hive</h3><h4 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h4><p>上传并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-hive-1.2.1-bin.tar.gz -C /export/server</span><br></pre></td></tr></table></figure><h4 id="重命名Hive"><a href="#重命名Hive" class="headerlink" title="重命名Hive"></a>重命名Hive</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-hive-1.2.1 hive1.2</span><br></pre></td></tr></table></figure><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile  #找不到命令解决方法：export PATH=/usr/sbin</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/export/servers/jdk</span><br><span class="line">export HADOOP_HOME=/export/servers/hadoop</span><br><span class="line">export HIVE_HOME=/export/servers/hive1.2</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin</span><br></pre></td></tr></table></figure><p><font color='red'>记得<code>. /etc/porfile</code>刷新配置文件</font></p><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>进入hive1.2&#x2F;conf的目录下</p><p><code>cp hive-env.sh.template hive-env.sh</code></p><p><code>vi hive-env.sh</code></p><p>修改HADOOP_HOME的路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HADOOP_HOME=/export/servers/hadoop2.7</span><br></pre></td></tr></table></figure><h3 id="安装Hive（带MySQL）"><a href="#安装Hive（带MySQL）" class="headerlink" title="安装Hive（带MySQL）"></a>安装Hive（带MySQL）</h3><h4 id="安装Mysql（安装有就跳过这一步）"><a href="#安装Mysql（安装有就跳过这一步）" class="headerlink" title="安装Mysql（安装有就跳过这一步）"></a>安装Mysql（安装有就跳过这一步）</h4><p><strong>1、导入包</strong><code>mysql57-community-release-el7-10.noarch.rpm</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>没有可用软件包 mysql57-community-release-el7-10.noarch.rpm。<br>错误：无须任何处理</p><p><font color='red'>请确认你的包在你安装的目录下</font></p><p><font color='blue'>失败软件包 密钥配置为xxxxx的解决方法（可以先运行）</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br></pre></td></tr></table></figure><p> <strong>2、安装MySQL服务器</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p>安装完成</p><p><strong>3、启动mysql</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld.service</span><br><span class="line">systemctl status mysqld.service #查看状态</span><br></pre></td></tr></table></figure><p><strong>4、查看MySQL原始密码，登录Mysql（两个方法）</strong></p><p><font color='red'>第一个方法（建议使用）</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br><span class="line"></span><br><span class="line">mysql -uroot -p(root@localhost后显示的密码)</span><br></pre></td></tr></table></figure><div class="note danger flat"><p>特殊符号就单引号即可</p></div><p>进入Mysql后修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 设置简单的密码，降低密码强度</span><br><span class="line">set global validate_password_policy=0;</span><br><span class="line">set global validate_password_length=1;</span><br><span class="line">#设置密码为123456</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><div class="note success no-icon flat"><p><font color='red'>第二个方法</font></p><p><font color='blue'>免密登录（建议不设置）</font></p><p>编辑 MySQL 配置文件：打开 MySQL 的配置文件 <code>my.cnf</code>（或 <code>my.ini</code>），通常位于 <code>/etc/mysql/</code> 目录下。在 <code>[mysqld]</code> 部分添加以下行：</p><p><code>skip-grant-table</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启MySQL服务</span></span><br><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure></div><p><strong>5、开启访问限制，语句中“%”代表所有IP，如果只对特定的云主机开放，就在%的位置填上特定云主机的IP地址</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27; with grant option;</span><br><span class="line"></span><br><span class="line">flush privileges; #刷新权限</span><br><span class="line"></span><br><span class="line">quit; </span><br></pre></td></tr></table></figure><p><strong>6、设置开机启动</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig mysqld on</span><br></pre></td></tr></table></figure><h4 id="安装环境-1"><a href="#安装环境-1" class="headerlink" title="安装环境"></a>安装环境</h4><p>上传并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-hive-1.2.1-bin.tar.gz -C /export/server</span><br></pre></td></tr></table></figure><h4 id="重命名Hive-1"><a href="#重命名Hive-1" class="headerlink" title="重命名Hive"></a>重命名Hive</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-hive-1,2,1 hive1.2</span><br></pre></td></tr></table></figure><h4 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile  #找不到命令解决方法：export PATH=/usr/sbin</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/export/servers/jdk</span><br><span class="line">export HADOOP_HOME=/export/servers/hadoop</span><br><span class="line">export HIVE_HOME=/export/servers/hive1.2</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin</span><br></pre></td></tr></table></figure><p><font color='red'>记得<code>. /etc/porfile</code>刷新配置文件</font></p><h4 id="配置Mysql文件"><a href="#配置Mysql文件" class="headerlink" title="配置Mysql文件"></a>配置Mysql文件</h4><p>解压mysql-connector-java-5.1.47.tar.gz</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf mysql-connector-java-5.1.47.tar.gz</span><br></pre></td></tr></table></figure><p>将该目录下的<code>mysql-connector-java-5.1.47-bin.jar</code>包放到<code>hive/lib</code>的目录下</p><p><code>cd mysql-connector-java-5.1.47</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv mysql-connector-java-5.1.47-bin.jar /export/servers/hive/lib/</span><br></pre></td></tr></table></figure><p><code>cd ..</code>回到上级目录可以将<code>rm -rf mysql-connector-java-5.1.47</code>删掉</p><h4 id="配置文件（五个）"><a href="#配置文件（五个）" class="headerlink" title="配置文件（五个）"></a>配置文件（五个）</h4><p>将工作目录移到hive2.1&#x2F;conf目录下，复制hive中conf目录下的初始文件作为配置文件，命令行为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp hive-env.sh.template hive-env.sh</span><br><span class="line">cp hive-default.xml.template hive-site.xml</span><br><span class="line">cp hive-log4j2.properties.template hive-log4j2.properties</span><br><span class="line">cp hive-exec-log4j2.properties.template hive-exec.log4j2.properties</span><br></pre></td></tr></table></figure><p><code>vi hive-env.sh</code></p><p>修改HADOOP_HOME的路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HADOOP_HOME=/export/servers/hadoop2.7</span><br></pre></td></tr></table></figure><p><strong>修改hive-site.xml的配置文件中的参数</strong>，使其连接到mysql数据库，具体参数配置如下：</p><p><font color='red'>localhost改成自己的主机名</font><br>注意：下面ConnectionUserName和ConnectionPassword需要更加mysql中<strong>自己设置的用户名和密码</strong>，我这里的用户名为root，密码为123456。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span><br><span class="line">&lt;value&gt;jdbc:mysql://localhost:3306/hive?createDatabaseIfNotExist=true&amp;amp;useSSL=false&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;root&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;123456&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><p>修改hive-site.xml配置文件中的配置参数，将{system:java.io.tmpdir}&#x2F;&amp;{system:user.name}  改成 &#x2F;tmp&#x2F;hive，有如下属性需要修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;hive.exec.local.scratchdir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/tmp/hive&lt;/value&gt;</span><br><span class="line">    &lt;description&gt;Local scratch space for Hive jobs&lt;/description&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">   &lt;name&gt;hive.querylog.location&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/tmp/hive&lt;/value&gt;</span><br><span class="line">    &lt;description&gt;Location of Hive run time structured log file&lt;/description&gt;</span><br><span class="line"> &lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">   &lt;name&gt;hive.downloaded.resources.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/tmp/hive&lt;/value&gt;</span><br><span class="line">    &lt;description&gt;Temporary local directory for added resources in the remote file system.&lt;/description&gt;</span><br><span class="line"> &lt;/property&gt;</span><br></pre></td></tr></table></figure><p>在hive2.1&#x2F;bin目录下使用<code>schematool -dbType mysql -initSchema</code>命令初始化hive</p><p>看到提示schemaTool completed，即初始化hive成功</p><p><font color='red'>看到schemaTool failed则为失败</font></p><p><strong>使用mysql -uroot -p123456,命令重新登录MySQL，并在MySQL中使用create database hive;语句新建hive数据库，使用show databases;语句验证数据库是否创建成功，可查询到即创建成功。</strong></p><h3 id="Hive-Shell命令的使用"><a href="#Hive-Shell命令的使用" class="headerlink" title="Hive Shell命令的使用"></a>Hive Shell命令的使用</h3><h4 id="Hive的启动和关闭"><a href="#Hive的启动和关闭" class="headerlink" title="Hive的启动和关闭"></a>Hive的启动和关闭</h4><p>先启动hdfs，再启动hive</p><p><code>start-dfs.sh</code>再到hive1.2的目录下启动hive</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/hive</span><br></pre></td></tr></table></figure><p>退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit;</span><br></pre></td></tr></table></figure><h4 id="使用方法同MySQL语法"><a href="#使用方法同MySQL语法" class="headerlink" title="使用方法同MySQL语法"></a>使用方法同MySQL语法</h4><h4 id="新建用户表并用txt文件导入数据"><a href="#新建用户表并用txt文件导入数据" class="headerlink" title="新建用户表并用txt文件导入数据"></a>新建用户表并用txt文件导入数据</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create t_user(id int,name string) row format delimited fields terminated by &#x27; &#x27; lines terminated by &#x27;\n&#x27;;</span><br></pre></td></tr></table></figure><p>上传txt文件到主机并加载数据到Hive表的t_user中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load data local inpath &#x27;Linux的目标文件路径&#x27; overwrite into table t_users;</span><br></pre></td></tr></table></figure><p>如果是把该文件上传到hdfs中，再加载到hive表的t_user中</p><p>先把文件上传到hdfs上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -put Linux的目标文件路径 /tmp</span><br></pre></td></tr></table></figure><p>再加载数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load data inpath &#x27;/tmp/t_users.txt&#x27; overwrite into table t_users;</span><br></pre></td></tr></table></figure><p>通过<strong>select命令</strong>查看t_users表，看数据是否加载成功</p><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Linux系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hadoop环境(2.7.4)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hive1.2.1安装包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MySQL两个安装包（第二个需要）&lt;/strong&gt;&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/categories/Hadoop/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/tags/Hadoop/"/>
    
    <category term="hive" scheme="http://example.com/tags/hive/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Hadoop2.7.4安装步骤</title>
    <link href="http://example.com/2023/07/14/Linux-Hadoop%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/"/>
    <id>http://example.com/2023/07/14/Linux-Hadoop%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</id>
    <published>2023-07-14T13:23:59.000Z</published>
    <updated>2023-08-23T05:26:17.776Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Linux系统</li><li>jdk1.8.0、Hadoop2.7.4安装包</li></ul><h4 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /export/servers /export/data /export/software </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">包位置、数据位置、安装包位置</span></span><br></pre></td></tr></table></figure><h4 id="进入-x2F-export-x2F-software-导入jdk、hadoop安装包"><a href="#进入-x2F-export-x2F-software-导入jdk、hadoop安装包" class="headerlink" title="进入 &#x2F;export&#x2F;software 导入jdk、hadoop安装包"></a>进入 &#x2F;export&#x2F;software 导入jdk、hadoop安装包</h4><h4 id="解压jdk、hadoop安装包"><a href="#解压jdk、hadoop安装包" class="headerlink" title="解压jdk、hadoop安装包"></a>解压jdk、hadoop安装包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf 安装包名 -C /export/servers</span><br></pre></td></tr></table></figure><h4 id="修改jdk、hadoop名字"><a href="#修改jdk、hadoop名字" class="headerlink" title="修改jdk、hadoop名字"></a>修改jdk、hadoop名字</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv jdk-tab jdk</span><br><span class="line">mv hadoop-tab hadoop</span><br></pre></td></tr></table></figure><h4 id="配置jdk、hadoop环境"><a href="#配置jdk、hadoop环境" class="headerlink" title="配置jdk、hadoop环境"></a>配置jdk、hadoop环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile  #找不到命令解决方法：export PATH=/usr/sbin</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/export/servers/jdk</span><br><span class="line">export HADOOP_HOME=/export/servers/hadoop</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure><p><font color='red'>记得<code>. /etc/porfile</code>刷新配置文件</font></p><h4 id="检查java、Hadoop是否配置成功"><a href="#检查java、Hadoop是否配置成功" class="headerlink" title="检查java、Hadoop是否配置成功"></a>检查java、Hadoop是否配置成功</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">hadoop version</span><br></pre></td></tr></table></figure><h4 id="永久关闭防火墙或者放行端口"><a href="#永久关闭防火墙或者放行端口" class="headerlink" title="永久关闭防火墙或者放行端口"></a>永久关闭防火墙或者放行端口</h4><p>永久关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><p>放行端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=50070/tcp --permanent  #放行50070端口</span><br><span class="line">firewall-cmd --reload  #重新载入 返回 success 代表成功</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 返回 <span class="built_in">yes</span> 代表开启成功</span></span><br><span class="line">firewall-cmd --zone=public --query-port=50070/tcp</span><br></pre></td></tr></table></figure><h4 id="配置hosts文件"><a href="#配置hosts文件" class="headerlink" title="配置hosts文件"></a>配置hosts文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line">ip地址 主机名</span><br></pre></td></tr></table></figure><h4 id="ssh免密协议"><a href="#ssh免密协议" class="headerlink" title="ssh免密协议"></a>ssh免密协议</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa #不记得可用ssh-keygen --help 回车4次</span><br><span class="line">ssh-copy-id ip地址或主机名 #输入主机密码</span><br><span class="line">ssh ip地址或主机名 #查看是否免密进入成功</span><br></pre></td></tr></table></figure><h4 id="配置Hadoop的5个文件"><a href="#配置Hadoop的5个文件" class="headerlink" title="配置Hadoop的5个文件"></a>配置Hadoop的5个文件</h4><p><font color="red">localhost 是主机名 可以修改，注意前面和后面不能修改</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /export/servers/hadoop/etc/hadoop/ #进入目录</span><br></pre></td></tr></table></figure><p>①<code>vi hadoop-env.sh</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找到JAVA_HOME并且配置你的路径</span></span><br><span class="line">JAVA_HOME=/export/servers/jdk #配置java路径</span><br></pre></td></tr></table></figure><p>②<code>vi core-site.xml</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;!--指定Hadoop所使用的文件系统，HDFS的NameNode地址--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;!--指定Hadoop运行时产生临时文件的存储目录--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;/export/servers/hadoop/tmp&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>③<code>vi hdfs-site.xml</code></p><p><font color="red"><value>1</value> 这里的主机是1台主机，搭建高可用的hadoop请看其他教程</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;!--指定HDFS副本的数量--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;!--Secondary namenode所在主机的IP和端口--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;localhost:50090&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/export/servers/hadoop/dir&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/export/servers/hadoop/data&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>④<code>cp mapred-site.xml.template mapred-site.xml</code></p><p>先复制再编辑</p><p><code>vi mapred-site.xml</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;!--指定MapReduce运行时的框架，在Yarn上运行--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>⑤<code>vi yarn-site.xml</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;!-- Site specific YARN configuration properties --&gt;</span><br><span class="line">        &lt;!--指定Yarn的ResourceManager的地址--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;localhost&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;!--Reducer获取数据的方式--&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h4 id="格式化Hadoop"><a href="#格式化Hadoop" class="headerlink" title="格式化Hadoop"></a>格式化Hadoop</h4><p><code>cd /export/servers/hadoop/bin</code></p><p>要到Hadoop的bin目录下格式化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><h4 id="启动Hadoop服务"><a href="#启动Hadoop服务" class="headerlink" title="启动Hadoop服务"></a>启动Hadoop服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-all.sh #开启</span><br><span class="line">stop-all.sh #关闭</span><br></pre></td></tr></table></figure><p><code>jps</code></p><p>查看有以下程序</p><p>①DataNode<code>hdfs-site.xml</code><br>②NameNode<code>hdfs-site.xml core-site.xml</code><br>③SecondaryNameNode<code>hdfs-site.xml</code><br>④ResourceManager<code>yarn-site.xml</code><br>⑤NodeManager<code>yarn-site.xml</code><br>⑥Jps</p><h4 id="访问HDFS-UI"><a href="#访问HDFS-UI" class="headerlink" title="访问HDFS UI"></a>访问HDFS UI</h4><p>浏览器</p><p><code>IP:50070</code></p><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><h5 id="hadoop上传文件-没有到主机的路由"><a href="#hadoop上传文件-没有到主机的路由" class="headerlink" title="hadoop上传文件 没有到主机的路由"></a>hadoop上传文件 没有到主机的路由</h5><p>①检查防火墙有没有关闭</p><p>②ping服务看看有么有问题</p><p>③关闭SELinux</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">修改配置文件需要重启机器：</span><br><span class="line"></span><br><span class="line">修改/etc/selinux/config文件</span><br><span class="line"></span><br><span class="line">将SELINUX=enforcing改为SELINUX=disabled</span><br><span class="line"></span><br><span class="line">重启虚拟机</span><br></pre></td></tr></table></figure><h4 id="无法访问50070-web网页"><a href="#无法访问50070-web网页" class="headerlink" title="无法访问50070 web网页"></a>无法访问50070 web网页</h4><p>①检查配置文件，检查五个服务是否正常启动</p><p>②检查防火墙或者安全组有没有放行50070端口</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntu</span><br><span class="line"># 检查防火墙有没有关闭</span><br><span class="line">systemctl distable firewalld</span><br></pre></td></tr></table></figure><p>③在hdfs-site.xml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.http.address&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;0.0.0.0:50070&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;Linux系统&lt;/li&gt;
&lt;li&gt;jdk1.8.0、Hadoop2.7.4安装包&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;创建文件夹&quot;&gt;&lt;a href=&quot;#创建文件夹&quot; class=&quot;headerlink&quot; title=&quot;创建文件夹&quot;&gt;&lt;/a&gt;创建文件夹&lt;/h4&gt;</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/categories/Hadoop/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Hadoop" scheme="http://example.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Linux-网络静态IP配置</title>
    <link href="http://example.com/2023/07/13/Linux-%E7%BD%91%E7%BB%9C%E9%9D%99%E6%80%81IP%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2023/07/13/Linux-%E7%BD%91%E7%BB%9C%E9%9D%99%E6%80%81IP%E9%85%8D%E7%BD%AE/</id>
    <published>2023-07-13T11:03:08.000Z</published>
    <updated>2023-08-22T06:44:57.456Z</updated>
    
    <content type="html"><![CDATA[<h4 id="打开ifcfg-eno-文件编辑"><a href="#打开ifcfg-eno-文件编辑" class="headerlink" title="打开ifcfg-eno*文件编辑"></a>打开ifcfg-eno*文件编辑</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eno[按Tab]</span><br></pre></td></tr></table></figure><p>在跳出来的界面做如下操作：<br><code>dhcp改成static</code> 将动态改成静态<br><code>ONBOOT=yes</code></p><p>最下面增加<br>IPADDR&#x3D;自己的ip地址<code>（你要设置的固定IP地址，前三项必须要和你配置的网络一样）</code><br>GATEWAY 网关&#x3D;前三项和ip地址相同，最后默认为2<br>NETMASKER 子网掩码&#x3D;255.255.255.0<br>DNS1&#x3D;和GATEWAY一致<br>DNS2&#x3D;114.114.114.114</p><p>例如 <code>我的前三项是192.168.219 如下设置</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IPADDR=192.168.219.129</span><br><span class="line">GATEWAY=192.168.219.2</span><br><span class="line">NETMASKER=255.255.255.0 </span><br><span class="line">DNS1=192.168.219.2</span><br><span class="line">DNS2=114.114.114.114</span><br></pre></td></tr></table></figure><h4 id="配置完后保存退出，然后重启网络服务"><a href="#配置完后保存退出，然后重启网络服务" class="headerlink" title="配置完后保存退出，然后重启网络服务"></a>配置完后保存退出，然后重启网络服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>配置错误就会失败，一般重启网络服务只需要几秒钟</p><h4 id="查看IP"><a href="#查看IP" class="headerlink" title="查看IP"></a>查看IP</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure><p>显示你要固定的IP地址代表成功</p><h4 id="ping-百度-查看是否成功"><a href="#ping-百度-查看是否成功" class="headerlink" title="ping 百度 查看是否成功"></a>ping 百度 查看是否成功</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><p>ping出未知服务请再次检查你的配置有没有写错</p><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;打开ifcfg-eno-文件编辑&quot;&gt;&lt;a href=&quot;#打开ifcfg-eno-文件编辑&quot; class=&quot;headerlink&quot; title=&quot;打开ifcfg-eno*文件编辑&quot;&gt;&lt;/a&gt;打开ifcfg-eno*文件编辑&lt;/h4&gt;&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="网络" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Zabbix安装</title>
    <link href="http://example.com/2023/07/13/Linux-Zabbix%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/07/13/Linux-Zabbix%E5%AE%89%E8%A3%85/</id>
    <published>2023-07-13T10:25:20.000Z</published>
    <updated>2023-08-22T06:30:50.138Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Zabbix官网：</strong> <a href="https://www.zabbix.com/">Zabbix :: The Enterprise-Class Open Source Network Monitoring Solution</a></p><h3 id="一、系统环境准备"><a href="#一、系统环境准备" class="headerlink" title="一、系统环境准备"></a>一、系统环境准备</h3><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><p>（可以选择开放对应的端口，默认为tcp&#x2F;udp 10050、10051）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br></pre></td></tr></table></figure><h4 id="关闭SELinux："><a href="#关闭SELinux：" class="headerlink" title="关闭SELinux："></a>关闭SELinux：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line">sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27; /etc/selinux/config</span><br></pre></td></tr></table></figure><h4 id="一定要重启（👍）"><a href="#一定要重启（👍）" class="headerlink" title="一定要重启（👍）"></a>一定要重启（👍）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="二、安装并配置zabbix"><a href="#二、安装并配置zabbix" class="headerlink" title="二、安装并配置zabbix"></a>二、安装并配置zabbix</h3><h4 id="安装-zabbix-rpm-源"><a href="#安装-zabbix-rpm-源" class="headerlink" title="安装 zabbix rpm 源"></a>安装 zabbix rpm 源</h4><p>使用阿里云 zabbix 源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p>清理yum缓存和重新生成缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all &amp;&amp; yum makecache fast</span><br></pre></td></tr></table></figure><h4 id="安装zabbix服务端组件-zabbix-server-和-agent"><a href="#安装zabbix服务端组件-zabbix-server-和-agent" class="headerlink" title="安装zabbix服务端组件 zabbix server 和 agent"></a>安装zabbix服务端组件 zabbix server 和 agent</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zabbix-server-mysql zabbix-agent -y</span><br></pre></td></tr></table></figure><h4 id="安装zabbix前端组件"><a href="#安装zabbix前端组件" class="headerlink" title="安装zabbix前端组件"></a>安装zabbix前端组件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install centos-release-scl -y</span><br></pre></td></tr></table></figure><h4 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/yum.repos.d/zabbix.repo</span><br></pre></td></tr></table></figure><p>将[zabbix-frontend]下的 enabled 改为 1（1-启用；0-不启用）</p><h4 id="安装zabbix前端页面、初始数据库、PHP及httpd组件"><a href="#安装zabbix前端页面、初始数据库、PHP及httpd组件" class="headerlink" title="安装zabbix前端页面、初始数据库、PHP及httpd组件"></a>安装zabbix前端页面、初始数据库、PHP及httpd组件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zabbix-web-mysql-scl zabbix-apache-conf-scl -y</span><br></pre></td></tr></table></figure><h3 id="三、安装并配置mariadb数据库"><a href="#三、安装并配置mariadb数据库" class="headerlink" title="三、安装并配置mariadb数据库"></a>三、安装并配置mariadb数据库</h3><h4 id="安装-centos7-默认的-mariadb-数据库"><a href="#安装-centos7-默认的-mariadb-数据库" class="headerlink" title="安装 centos7 默认的 mariadb 数据库"></a>安装 centos7 默认的 mariadb 数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb-server -y</span><br></pre></td></tr></table></figure><h4 id="启动数据库，并配置开机自动启动"><a href="#启动数据库，并配置开机自动启动" class="headerlink" title="启动数据库，并配置开机自动启动"></a>启动数据库，并配置开机自动启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now mariadb</span><br></pre></td></tr></table></figure><h4 id="使用以下命令初始化-mariadb-并配置-root-密码"><a href="#使用以下命令初始化-mariadb-并配置-root-密码" class="headerlink" title="使用以下命令初始化 mariadb 并配置 root 密码"></a>使用以下命令初始化 mariadb 并配置 root 密码</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><h4 id="使用-root-用户进入-mysql，并建立-zabbix-数据库，注意数据库编码"><a href="#使用-root-用户进入-mysql，并建立-zabbix-数据库，注意数据库编码" class="headerlink" title="使用 root 用户进入 mysql，并建立 zabbix 数据库，注意数据库编码"></a>使用 root 用户<code>进入 mysql</code>，并<strong>建立 zabbix 数据库</strong>，注意数据库编码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line"></span><br><span class="line">create user zabbix@localhost identified by &#x27;123456&#x27;; #可以设置为PW@2021</span><br><span class="line"></span><br><span class="line">grant all privileges on zabbix.* to zabbix@localhost;</span><br><span class="line"></span><br><span class="line">quit;</span><br></pre></td></tr></table></figure><h4 id="使用以下命令导入-zabbix-数据库"><a href="#使用以下命令导入-zabbix-数据库" class="headerlink" title="使用以下命令导入 zabbix 数据库"></a>使用以下命令导入 zabbix 数据库</h4><p>zabbix 数据库用户为 zabbix，密码为 123456或者PW@2021</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p123456 zabbix</span><br></pre></td></tr></table></figure><h3 id="四、zabbix配置初始化"><a href="#四、zabbix配置初始化" class="headerlink" title="四、zabbix配置初始化"></a>四、zabbix配置初始化</h3><h4 id="修改-zabbix-server-配置文件"><a href="#修改-zabbix-server-配置文件" class="headerlink" title="修改 zabbix server 配置文件"></a>修改 zabbix server 配置文件</h4><p><code>vi /etc/zabbix/zabbix_server.conf</code> 里的数据库密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DBPassword=123456</span><br></pre></td></tr></table></figure><h4 id="配置时区信息"><a href="#配置时区信息" class="headerlink" title="配置时区信息"></a>配置时区信息</h4><p><code>vi /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf </code>,修改时区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php_value[date.timezone] = Asia/Shanghai</span><br></pre></td></tr></table></figure><h4 id="配置字体，避免前台监控图形中文乱码"><a href="#配置字体，避免前台监控图形中文乱码" class="headerlink" title="配置字体，避免前台监控图形中文乱码"></a>配置字体，避免前台监控图形中文乱码</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wqy-microhei-fonts</span><br><span class="line"></span><br><span class="line">cp /usr/share/fonts/wqy-microhei/wqy-microhei.ttc /usr/share/fonts/dejavu/DejaVuSans.ttf </span><br></pre></td></tr></table></figure><h4 id="启动zabbix相关服务并设置开机自启动"><a href="#启动zabbix相关服务并设置开机自启动" class="headerlink" title="启动zabbix相关服务并设置开机自启动"></a>启动zabbix相关服务并设置开机自启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-server zabbix-agent httpd rh-php72-php-fpm</span><br><span class="line"></span><br><span class="line">systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm</span><br></pre></td></tr></table></figure><h4 id="浏览器上访问前端，进行初始化安装"><a href="#浏览器上访问前端，进行初始化安装" class="headerlink" title="浏览器上访问前端，进行初始化安装"></a>浏览器上访问前端，进行初始化安装</h4><p>使用浏览器访问<code>http:// ip地址 /zabbix</code></p><p>输入刚配置的<strong>数据库 zabbix 用户的密码:123456</strong></p><p><strong>登录账号为 Admin，密码： zabbix</strong></p><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Zabbix官网：&lt;/strong&gt; &lt;a href=&quot;https://www.zabbix.com/&quot;&gt;Zabbix :: The Enterprise-Class Open Source Network Monitoring Solution&lt;/a&gt;&lt;/</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="运维" scheme="http://example.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Zabbix" scheme="http://example.com/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Tomcat8.5.88安装</title>
    <link href="http://example.com/2023/07/12/Linux-Tomcat%E5%AE%89%E8%A3%85/"/>
    <id>http://example.com/2023/07/12/Linux-Tomcat%E5%AE%89%E8%A3%85/</id>
    <published>2023-07-12T08:37:30.000Z</published>
    <updated>2023-08-22T06:30:44.515Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Linux系统</p></li><li><p>Tomcat8.5.88、jdk1.8.0安装包</p></li></ul><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><div class="note success flat"><p>安装jdk，有了无视安装，从1.4开始</p></div><h4 id="上传jdk到-x2F-usr-x2F-lib-x2F-jvm，并解压"><a href="#上传jdk到-x2F-usr-x2F-lib-x2F-jvm，并解压" class="headerlink" title="上传jdk到&#x2F;usr&#x2F;lib&#x2F;jvm，并解压"></a>上传jdk到&#x2F;usr&#x2F;lib&#x2F;jvm，并解压</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib/jvm</span><br><span class="line">tar -zxvf jdk[按Tab]</span><br></pre></td></tr></table></figure><h4 id="重命名jdk"><a href="#重命名jdk" class="headerlink" title="重命名jdk"></a>重命名jdk</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv jdk1.8.0_161/ jdk</span><br></pre></td></tr></table></figure><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile # 进入环境变量配置</span><br><span class="line"></span><br><span class="line"># set java environment</span><br><span class="line">JAVA_HOME=/usr/lib/jvm/jdk1.8.0_211</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CLASSPATH</span><br><span class="line">PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">export JAVA_HOME CLASSPATH PATH</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h4 id="上传tomcat到-x2F-usr-x2F-local-x2F-下，并且解压缩"><a href="#上传tomcat到-x2F-usr-x2F-local-x2F-下，并且解压缩" class="headerlink" title="上传tomcat到&#x2F;usr&#x2F;local&#x2F;下，并且解压缩"></a>上传tomcat到&#x2F;usr&#x2F;local&#x2F;下，并且解压缩</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">tar -zxvf apache-tomcat[按Tab]</span><br></pre></td></tr></table></figure><h4 id="重命名文件夹"><a href="#重命名文件夹" class="headerlink" title="重命名文件夹"></a>重命名文件夹</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv apache-按Tab tomcat </span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><h5 id="在tomcat下conf文件夹下修改文件"><a href="#在tomcat下conf文件夹下修改文件" class="headerlink" title="在tomcat下conf文件夹下修改文件"></a>在tomcat下conf文件夹下修改文件</h5><p>server.xml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/tomcat/conf/server.xml </span><br></pre></td></tr></table></figure><p>增加节点<code>URIEncoding=&quot;UTF-8&quot;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;8443&quot;</span><br><span class="line">               maxParameterCount=&quot;1000&quot;</span><br><span class="line">               URIEncoding=&quot;UTF-8&quot; #在此处增加</span><br><span class="line">               /&gt;</span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><h4 id="在bin目录下启动tomcat"><a href="#在bin目录下启动tomcat" class="headerlink" title="在bin目录下启动tomcat"></a>在bin目录下启动tomcat</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>出现Tomcat started.就代表启动成功</p><h4 id="可以通过查看java进程看是否成功"><a href="#可以通过查看java进程看是否成功" class="headerlink" title="可以通过查看java进程看是否成功"></a>可以通过查看java进程看是否成功</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep java</span><br></pre></td></tr></table></figure><h4 id="防火墙开放8080端口，不要忘记reload使之生效"><a href="#防火墙开放8080端口，不要忘记reload使之生效" class="headerlink" title="防火墙开放8080端口，不要忘记reload使之生效"></a>防火墙开放8080端口，不要忘记reload使之生效</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">friewall-cmd --zone=public --permanent --add-port=8080/tcp</span><br><span class="line"></span><br><span class="line">friewall-cmd --reload</span><br></pre></td></tr></table></figure><p>4、 打开网站</p><p>用浏览器打开ip:8080 进行验证，看到Apache Tomcat绿色网页代表成功</p><h3 id="配置开机启动"><a href="#配置开机启动" class="headerlink" title="配置开机启动"></a>配置开机启动</h3><h4 id="在tomcat的bin下创建一个文件"><a href="#在tomcat的bin下创建一个文件" class="headerlink" title="在tomcat的bin下创建一个文件"></a>在tomcat的bin下创建一个文件</h4><p>setenv.sh【必须是这个命名，catalina.sh启动时会调这个文件】，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/tomcat/bin/</span><br><span class="line"></span><br><span class="line">vi setenv.sh</span><br></pre></td></tr></table></figure><p>编辑内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">add tomcat pid</span></span><br><span class="line">CATALINA_PID=&quot;$CATALINA_BASE/tomcat.pid&quot;  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">add java opts</span>  </span><br><span class="line">JAVA_OPTS=&quot;-XX:MetaspaceSize=256M -XX:MaxMetaspaceSize=512m -Xms1024m -Xmx2048m&quot;</span><br></pre></td></tr></table></figure><h4 id="在-x2F-usr-x2F-lib-x2F-systemd-x2F-system-x2F-下创建文件"><a href="#在-x2F-usr-x2F-lib-x2F-systemd-x2F-system-x2F-下创建文件" class="headerlink" title="在 &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 下创建文件"></a>在 &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F; 下创建文件</h4><p>tomcat.service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib/systemd/system/</span><br><span class="line"></span><br><span class="line">vi tomcat.service</span><br></pre></td></tr></table></figure><p>编辑内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Tomcat</span><br><span class="line">After=syslog.target network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">Environment=&quot;JAVA_HOME=/usr/lib/jvm/jdk1.8.0_211&quot;</span><br><span class="line"># 检查java的路径</span><br><span class="line">PIDFile=/usr/local/tomcat/tomcat.pid</span><br><span class="line">ExecStart=/usr/local/tomcat/bin/startup.sh</span><br><span class="line"># 检查tomcat的路径</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="reload守护进程，开启开机启动"><a href="#reload守护进程，开启开机启动" class="headerlink" title="reload守护进程，开启开机启动"></a>reload守护进程，开启开机启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl enable tomcat.service</span><br></pre></td></tr></table></figure><p>显示<code>Created symlink from /etc/systemd/system/multi-user.target.wants/tomcat.service to /usr/lib/systemd/system/tomcat.service.</code>成功</p><p><code>可以reboot验证是否配置成功</code></p><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Linux系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tomcat8.5.88、jdk1.8.0安装包&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Tomcat" scheme="http://example.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Linux (一)基础文件命令</title>
    <link href="http://example.com/2023/06/19/Linux-%E4%B8%80-%E5%9F%BA%E7%A1%80%E6%96%87%E4%BB%B6%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2023/06/19/Linux-%E4%B8%80-%E5%9F%BA%E7%A1%80%E6%96%87%E4%BB%B6%E5%91%BD%E4%BB%A4/</id>
    <published>2023-06-19T08:15:34.000Z</published>
    <updated>2023-08-22T06:30:17.785Z</updated>
    
    <content type="html"><![CDATA[<p>如何输入命令</p><p><strong>命令 [选项]（[参数]）[选项的值]（[参数的值]）</strong>　　<br>空格作为分割<br>常见选项（参数）：-h  –help   ；<br>特点：选项样子为： -字母  或 –加单词</p><p>举例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l /home </span><br></pre></td></tr></table></figure><p>$：命令提示符   |   ls：命令字   |   -l：命令选项   |   &#x2F;home：命令参数</p><h3 id="文件名称规范"><a href="#文件名称规范" class="headerlink" title="文件名称规范"></a>文件名称规范</h3><ul><li>文件的名称大小写敏感</li><li>名称最多可以为255个字符</li><li>除了正斜线外，都是有效字符（建议不用空格）</li><li>通过touch命令可以创建一个空白文件或者更新已有文件的时间</li><li>以“.”开头的为隐藏文件</li></ul><p>Linux系统没有文件和文件夹之分，统称为文件</p><h4 id="命令Shutdown关机重启命令"><a href="#命令Shutdown关机重启命令" class="headerlink" title="命令Shutdown关机重启命令"></a>命令<strong>Shutdown</strong>关机重启命令</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Shutdown [选项]  时间</span><br><span class="line">-c     取消前一个关机命令</span><br><span class="line">-h     关机</span><br><span class="line">-r      重启</span><br><span class="line">Shutdown –h (now)/20:30</span><br><span class="line">其他命令  halt    poweroff</span><br><span class="line">重启命令   reboot  init6</span><br></pre></td></tr></table></figure><h3 id="目录处理命令"><a href="#目录处理命令" class="headerlink" title="目录处理命令"></a>目录处理命令</h3><h4 id="命令ls"><a href="#命令ls" class="headerlink" title="命令ls"></a>命令<strong>ls</strong></h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">英文原意：list</span><br><span class="line">所在路径：/bin/ls    所有用户可执行</span><br><span class="line">功能：显示目录文件</span><br><span class="line">语法：ls 选项[-ald] [文件或目录]</span><br><span class="line">参数：</span><br><span class="line">           -l 显示详细信息　系统里面的快捷方式#ll</span><br><span class="line">           -a 显示隐藏文件　</span><br><span class="line">           -d 查看目录属性(不查看里面的内容)</span><br><span class="line">           -h 增强可读性</span><br><span class="line">           -i  显示文件i节点</span><br><span class="line">       </span><br><span class="line">##### Ls  显示结果</span><br><span class="line">文件类型  （ugo）权限 读取次数 所有者 所属组 文件大小 最后一次修改时间  文件名  </span><br><span class="line">-rw-r--r—</span><br><span class="line">      - 文件类型（-二进制文件   d目录 l软连接）</span><br><span class="line">      u   g   o</span><br><span class="line">      u 所有者  g所属组  o其他人</span><br><span class="line">      r 读 w写 x执行</span><br></pre></td></tr></table></figure><h4 id="命令pwd"><a href="#命令pwd" class="headerlink" title="命令pwd"></a>命令<strong>pwd</strong></h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">英文：print working directory</span><br><span class="line">命令所在路径：/bin/pwd</span><br><span class="line">功能：显示当前目录</span><br><span class="line">语法：pwd     没有参数</span><br><span class="line">范例：pwd</span><br></pre></td></tr></table></figure><h4 id="命令mkdir"><a href="#命令mkdir" class="headerlink" title="命令mkdir"></a>命令<strong>mkdir</strong></h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">英文：make directories</span><br><span class="line">命令所在路径：/bin/mkdir</span><br><span class="line">语法：mkdir –p[目录名]</span><br><span class="line">功能：创建新目录</span><br><span class="line">                -p 递归创建</span><br><span class="line">范例：  mkdir  -p /tmp/study/sql</span><br><span class="line">             mkdir –p /tmp/study/oracle  /tmp/study/ceshi</span><br></pre></td></tr></table></figure><h4 id="命令cd"><a href="#命令cd" class="headerlink" title="命令cd"></a>命令<strong>cd</strong></h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">英文： change directroy</span><br><span class="line">命令所在路径： shell内置命令</span><br><span class="line">功能：切换目录</span><br><span class="line">语法：cd  [目录]</span><br><span class="line"></span><br><span class="line">范例： cd  /tmp/study    切换到指定目录</span><br><span class="line">            cd  ..      回到上一级目录</span><br><span class="line">            cd .        回到当前目录的父目录</span><br><span class="line">            cd -        返回跳转前的目录 </span><br></pre></td></tr></table></figure><h4 id="命令rmdir"><a href="#命令rmdir" class="headerlink" title="命令rmdir"></a>命令<strong>rmdir</strong></h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">英文： remove empty directory</span><br><span class="line">命令所在路径：/bin/rmdir</span><br><span class="line">功能：删除目录（删除空目录）</span><br><span class="line">语法：rmdir [目录名]</span><br><span class="line">范例：  rmdir  /tmp/study/oracle</span><br></pre></td></tr></table></figure><h4 id="命令cp"><a href="#命令cp" class="headerlink" title="命令cp"></a>命令<strong>cp</strong></h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">英文：cp</span><br><span class="line">命令路径：/bin/cp</span><br><span class="line">功能：复制文件或目录</span><br><span class="line">语法： cp  [原文件/目录] [目标目录]</span><br><span class="line">参数： -r   复制目录 </span><br><span class="line">           -p  保留文件属性 </span><br><span class="line">范例：  cp –r /tmp/study/oracle  /root</span><br><span class="line">                将目录/tmp/study/oracle 复制到 /root</span><br><span class="line">                 cp –r /tmp/study/oracle  /root/ceshi(复制同时更名）</span><br></pre></td></tr></table></figure><h4 id="命令mv"><a href="#命令mv" class="headerlink" title="命令mv"></a>命令<strong>mv</strong></h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">英文：move</span><br><span class="line">命令路径：/bin/mv</span><br><span class="line">功能：可以剪切一个或者多个文件或目录，改名</span><br><span class="line">语法：mv [原文件或目录] [目标目录] </span><br><span class="line">范例：mv  /tmp/study/sql  /root</span><br><span class="line">              mv /tmp/study/sql  /root/sqlserver</span><br><span class="line">              mv sqlserver sqlserver2008(改名）</span><br></pre></td></tr></table></figure><h3 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h3><h4 id="命令touch"><a href="#命令touch" class="headerlink" title="命令touch"></a>命令touch</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">命令路径：/bin/touch</span><br><span class="line">功能：创建空文件 </span><br><span class="line">语法：touch [文件名] </span><br><span class="line">范例：touch  story.list</span><br><span class="line">           不指定路径默认当前目录下创建</span><br><span class="line">           touch  /root/story.list</span><br><span class="line">注意：创建文件时不建议用空格，需要空格用双引号</span><br></pre></td></tr></table></figure><h4 id="命令cat"><a href="#命令cat" class="headerlink" title="命令cat"></a>命令cat</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令路径：/bin/cat</span><br><span class="line">功能：显示文件内容</span><br><span class="line">语法：cat [文件名]</span><br><span class="line">参数：-n 显示行号</span><br><span class="line">范例： cat /etc/issue</span><br><span class="line">              cat –n /etc/services</span><br></pre></td></tr></table></figure><h4 id="命令tac"><a href="#命令tac" class="headerlink" title="命令tac"></a>命令tac</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">功能：显示文件内容（反向列式）</span><br><span class="line">语法：tac [文件名]</span><br></pre></td></tr></table></figure><h4 id="命令more"><a href="#命令more" class="headerlink" title="命令more"></a>命令more</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">命令路径：/bin/more</span><br><span class="line">功能：分页显示文件内容</span><br><span class="line">语法:more  [文件名]</span><br><span class="line">            空格或f    翻页</span><br><span class="line">             enter     换行</span><br><span class="line">              q或Q    退出more浏览状态</span><br><span class="line">范例： more  /ect /services</span><br><span class="line">            不能向上翻页</span><br></pre></td></tr></table></figure><h4 id="命令less"><a href="#命令less" class="headerlink" title="命令less"></a>命令less</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令路径：/bin/less</span><br><span class="line">功能：分页显示文件内容</span><br><span class="line">          </span><br><span class="line">          pageup /pagedown  向上/下翻页</span><br><span class="line">          上箭头     向上换行</span><br><span class="line">           /   输入搜索的关键词     n   显示下个标记</span><br></pre></td></tr></table></figure><h4 id="命令head"><a href="#命令head" class="headerlink" title="命令head"></a>命令head</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">命令路径：/user/bin/head</span><br><span class="line">功能：显示文件前面几行内容</span><br><span class="line">语法：head –n  [文件名]</span><br><span class="line">范例： head –n7 /etc/services</span><br><span class="line">            显示前7行</span><br><span class="line">            不指定默认显示前10行</span><br></pre></td></tr></table></figure><h4 id="命令tail"><a href="#命令tail" class="headerlink" title="命令tail"></a>命令tail</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">命令路径：user/bin/tail</span><br><span class="line">功能：显示文件后面几行内容</span><br><span class="line">语法：tail [文件名]</span><br><span class="line">           -n  指定行数</span><br><span class="line">           -f  动态显示文件末尾内容</span><br><span class="line">范例： tail –n 18 /etc/services</span><br><span class="line">            日志文件 /var/log/messages</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>该文章Mec所著，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
    <summary type="html">简单的目录处理命令和文件处理命令</summary>
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
    <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>帮助文档</title>
    <link href="http://example.com/2023/06/17/hello-world/"/>
    <id>http://example.com/2023/06/17/hello-world/</id>
    <published>2023-06-17T12:30:02.666Z</published>
    <updated>2023-08-22T06:52:28.116Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到我的博客！ 这是我的第一篇文章</p><div class="note blue no-icon flat"><p><font color="#e96140">你可以通过微信、邮箱来联系我</font> </p><p>QQ：2258878405 (出错联系)</p><p>邮箱：<a href="mailto:&#x73;&#104;&#x6f;&#112;&#x32;&#48;&#x31;&#56;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;">&#x73;&#104;&#x6f;&#112;&#x32;&#48;&#x31;&#56;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#x6d;</a> (投稿专用)</p></div><div class="note default no-icon flat"><p>投稿须知：</p><p>请使用Typora编写文章</p><p>可以适当加入<a href="https://butterfly.js.org/posts/2df239ce/#Note-Bootstrap-Callout">標籤外掛(Tag Plugins) | Butterfly</a>进行美化</p></div><h2 id="快速使用向导（这是给作者自己看的）"><a href="#快速使用向导（这是给作者自己看的）" class="headerlink" title="快速使用向导（这是给作者自己看的）"></a>快速使用向导（这是给作者自己看的）</h2><hr><h3 id="创建我的新文章"><a href="#创建我的新文章" class="headerlink" title="创建我的新文章"></a>创建我的新文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="一键三连"><a href="#一键三连" class="headerlink" title="一键三连"></a>一键三连</h3><p>#预览网站</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>#上传部署网站</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>作者：Butterfly<br>该文章是Butterfly的帮助文档，经过Mec的修改，如有错误请联系作者邮箱更改</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎来到我的博客！ 这是我的第一篇文章&lt;/p&gt;
&lt;div class=&quot;note blue no-icon flat&quot;&gt;&lt;p&gt;&lt;font color=&quot;#e96140&quot;&gt;你可以通过微信、邮箱来联系我&lt;/font&gt; &lt;/p&gt;
&lt;p&gt;QQ：2258878405 (出错联系)&lt;/</summary>
      
    
    
    
    <category term="帮助" scheme="http://example.com/categories/%E5%B8%AE%E5%8A%A9/"/>
    
    
    <category term="帮助" scheme="http://example.com/tags/%E5%B8%AE%E5%8A%A9/"/>
    
  </entry>
  
</feed>
